version: 2

macros:
  - name: test_check_column_correlation
    description: Check the correlation between two columns
    arguments:
      - name: column1
        type: string
        description: The name of the first column
      - name: column2
        type: string
        description: The name of the second column
      - name: correlation_coef
        type: float
        description: The minimum correlation coefficient we expect between the two columns.
  - name: test_check_row_counts_per_partition
    description: Check that the number of rows in each partition is as expected
    arguments:
      - name: table_name
        type: string
        description: The name of the table to check
      - name: partition_column
        type: string
        description: The name of the column to partition by
  - name: test_expect_includes_all_value_combinations_from
    description:
      Check that all values in a column or set of columns are the same
      as the same set of columns in another table. Similar to a foreign key
      constraint, but rather than check if values from the model table exist in a comparison table,
      this checks if the comparison table has values that don't exist in the model table. Note that
      this check is only one way. If you also want to check whether the model table has values that
      don't exist in the comparison table, you'll need to call this function in the schema of the
      comparison table as well.
    arguments:
      - name: compare_table_name
        type: string
        description: The name of the table to compare columns with
      - name: compare_cols
        type: list
        description: A list of column names present in both tables. The test will succeed only if all combinations of column values present in at least one row in the comparison table are present in this table.
  - name: test_no_null_rows
    description: Check that there are no null rows in the table
  - name: test_not_all_null
    description: Check that not all values in a column are null
  - name: test_expect_complete_valid_ownership
    description: >
      Check whether ``fraction_owned`` columns sum too high (for any individual
      generator) or too low (for too many generators). Designed for use on
      ```out_eia860__yearly_ownership``. Fails when any generator has
      sum(fraction_owned) more than 1.02, or when more than half of generators have
      sum(fraction_owned) less than 0.98.
    arguments:
      - name: n_acceptable_failures
        type: integer
        description: The number of generators allowed to have sum(fraction_owned) more than 1.02; default 0.
  - name: test_expect_consistent_generator_ids
    description: >
      Check whether generator ids have entries that vary only in punctuation or case. Designed for use on ``_out_eia__yearly_generators``. Fails when any ``plant_id_eia`` has multiple generators with the same id after dropping all [^A-Z0-9] characters.
    arguments:
      - name: n_acceptable_failures
        type: integer
        description: The number of generators allowed to have inconsistent spellings.
  - name: test_expect_fgd_cost_totals_to_agree
    description: >
      Check whether the sum of itemized costs matches the total cost. Designed for use on ``_core_eia860__fgd_equipment``. Fails when more than 1% of rows have a sum that differs from the total by more than 1%. Includes careful null and nan handling.
  - name: test_expect_matching_primary_fuel_by_cost_and_mmbtu
    description: >
      Check whether the primary fuel by cost matches the primary fuel by mmbtu. Designed for use on ``out_ferc1__yearly_steam_plants_fuel_by_plant_sched402``. Fails when more than 5% of rows have different cost vs mmbtu primary fuels.
  - name: test_expect_one2one_mapping
    description: >
      Check whether there is a 1:1 mapping between two columns by grouping by the first column and counting the number of distinct values of the second. Fails when a value in ``groupby_column`` is paired with more than one ``counted_column`` value.
    arguments:
      - name: groupby_column
        type: string
        description: The name of the column to group by.
      - name: counted_column
        type: string
        description: The name of the column to count.
      - name: n_acceptable
        type: integer
        description: The number of acceptable ``groupby_column`` values having more than one ``counted_column`` value associated with them.
  - name: test_expect_unique_column_combination
    description: >
      Check whether the combination of values of the specified columns is unique. Fails when any combination occurs more than once.
    arguments:
      - name: columns
        type: list[string]
        description: The columns in the unique combination.
  - name: test_expect_unique_utility_id_eia
    description: >
      Check whether each generator has exactly one operator utility on any particular date. Designed for use on ``out_eia860__yearly_ownership``. Fails when any (``report_date``, ``plant_id_eia``, ``generator_id``) combination has more than one unique value for ``operator_utility_id_eia``.
    arguments:
      - name: n_acceptable_failures
        type: integer
        description: The number of generators allowed to multiple operator utilities on any particular date; default 0.
  - name: test_expect_valid_hour_of_year
    description: >
      Check whether ``hour_of_year`` is consistent with ``datetime_utc``. Designed for use on ``out_vcerare__hourly_available_capacity_factor``. Fails when the hour computed from the datetime does not match.
