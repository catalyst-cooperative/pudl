"""Rename ferc output assets

Revision ID: 1c2c961a7be5
Revises: 2ba971d7e675
Create Date: 2023-09-15 14:34:47.739335

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '1c2c961a7be5'
down_revision = '2ba971d7e675'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('out_ferc1__yearly_balance_sheet_assets',
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('asset_type', sa.Text(), nullable=False, comment='Type of asset being reported to the core_ferc1__yearly_balance_sheet_assets table.'),
    sa.Column('balance', sa.Text(), nullable=True, comment='Indication of whether a column is a credit or debit, as reported in the XBRL taxonomy.'),
    sa.Column('ending_balance', sa.Float(), nullable=True, comment='Account balance at end of year.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.Column('starting_balance', sa.Float(), nullable=True, comment='Account balance at beginning of year.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_balance_sheet_assets_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_balance_sheet_assets_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'asset_type', name=op.f('pk_out_ferc1__yearly_balance_sheet_assets'))
    )
    op.create_table('out_ferc1__yearly_balance_sheet_liabilities',
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('starting_balance', sa.Float(), nullable=True, comment='Account balance at beginning of year.'),
    sa.Column('ending_balance', sa.Float(), nullable=True, comment='Account balance at end of year.'),
    sa.Column('liability_type', sa.Text(), nullable=False, comment='Type of liability being reported to the core_ferc1__yearly_balance_sheet_liabilities table.'),
    sa.Column('balance', sa.Text(), nullable=True, comment='Indication of whether a column is a credit or debit, as reported in the XBRL taxonomy.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_balance_sheet_liabilities_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_balance_sheet_liabilities_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'liability_type', name=op.f('pk_out_ferc1__yearly_balance_sheet_liabilities'))
    )
    op.create_table('out_ferc1__yearly_cash_flow',
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('amount_type', sa.Text(), nullable=False, comment='Label describing the type of amount being reported. This could be a balance or a change in value.'),
    sa.Column('amount', sa.Float(), nullable=True, comment='Reported amount of dollars. This could be a balance or a change in value.'),
    sa.Column('balance', sa.Text(), nullable=True, comment='Indication of whether a column is a credit or debit, as reported in the XBRL taxonomy.'),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_cash_flow_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_cash_flow_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'amount_type', name=op.f('pk_out_ferc1__yearly_cash_flow'))
    )
    op.create_table('out_ferc1__yearly_depreciation_amortization_summary',
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('plant_function', sa.Text(), nullable=False, comment='Functional role played by utility plant (steam production, nuclear production, distribution, transmission, etc.).'),
    sa.Column('ferc_account_label', sa.Text(), nullable=False, comment='Long FERC account identifier derived from values reported in the XBRL taxonomies. May also refer to aggregations of individual FERC accounts.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('dollar_value', sa.Float(), nullable=True, comment='Dollar value of reported income, expense, asset, or liability.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_depreciation_amortization_summary_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_depreciation_amortization_summary_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'plant_function', 'ferc_account_label', name=op.f('pk_out_ferc1__yearly_depreciation_amortization_summary'))
    )
    op.create_table('out_ferc1__yearly_electric_energy_dispositions',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('energy_disposition_type', sa.Text(), nullable=False, comment='Type of energy disposition reported in the core_ferc1__yearly_electric_energy_dispositions. Dispositions include sales to customers, re-sales of energy, energy used internally, losses, etc.'),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.Column('energy_mwh', sa.Float(), nullable=True, comment='Sources and uses of energy in MWh.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_electric_energy_dispositions_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_electric_energy_dispositions_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'energy_disposition_type', name=op.f('pk_out_ferc1__yearly_electric_energy_dispositions'))
    )
    op.create_table('out_ferc1__yearly_electric_energy_sources',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('energy_source_type', sa.Text(), nullable=False, comment='Type of energy source reported in the core_ferc1__yearly_electric_energy_sources table. There are three groups of energy sources: generation, power exchanges and transmission.'),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.Column('energy_mwh', sa.Float(), nullable=True, comment='Sources and uses of energy in MWh.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_electric_energy_sources_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_electric_energy_sources_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'energy_source_type', name=op.f('pk_out_ferc1__yearly_electric_energy_sources'))
    )
    op.create_table('out_ferc1__yearly_electric_operating_expenses',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('dollar_value', sa.Float(), nullable=True, comment='Dollar value of reported income, expense, asset, or liability.'),
    sa.Column('expense_type', sa.Text(), nullable=False, comment='The type of expense.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_electric_operating_expenses_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_electric_operating_expenses_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'expense_type', name=op.f('pk_out_ferc1__yearly_electric_operating_expenses'))
    )
    op.create_table('out_ferc1__yearly_electric_operating_revenues',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('revenue_type', sa.Text(), nullable=False, comment='Label describing types of revenues.'),
    sa.Column('dollar_value', sa.Float(), nullable=True, comment='Dollar value of reported income, expense, asset, or liability.'),
    sa.Column('sales_mwh', sa.Float(), nullable=True, comment='Quantity of electricity sold in MWh.'),
    sa.Column('avg_customers_per_month', sa.Float(), nullable=True, comment='Average number of customers per month.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_electric_operating_revenues_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_electric_operating_revenues_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'revenue_type', name=op.f('pk_out_ferc1__yearly_electric_operating_revenues'))
    )
    op.create_table('out_ferc1__yearly_electric_plant_depreciation_changes',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('depreciation_type', sa.Text(), nullable=False, comment='Type of depreciation provision within FERC Account 108, including cost ofremoval, depreciation expenses, salvage, cost of retired plant, etc.'),
    sa.Column('plant_status', sa.Text(), nullable=False, comment='Utility plant financial status (in service, future, leased, total).'),
    sa.Column('utility_type', sa.Text(), nullable=False, comment='Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.'),
    sa.Column('dollar_value', sa.Float(), nullable=True, comment='Dollar value of reported income, expense, asset, or liability.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('balance', sa.Text(), nullable=True, comment='Indication of whether a column is a credit or debit, as reported in the XBRL taxonomy.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_electric_plant_depreciation_changes_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_electric_plant_depreciation_changes_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'depreciation_type', 'plant_status', 'utility_type', name=op.f('pk_out_ferc1__yearly_electric_plant_depreciation_changes'))
    )
    op.create_table('out_ferc1__yearly_electric_plant_depreciation_functional',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('plant_function', sa.Text(), nullable=False, comment='Functional role played by utility plant (steam production, nuclear production, distribution, transmission, etc.).'),
    sa.Column('plant_status', sa.Text(), nullable=False, comment='Utility plant financial status (in service, future, leased, total).'),
    sa.Column('utility_type', sa.Text(), nullable=False, comment='Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.'),
    sa.Column('ending_balance', sa.Float(), nullable=True, comment='Account balance at end of year.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('balance', sa.Text(), nullable=True, comment='Indication of whether a column is a credit or debit, as reported in the XBRL taxonomy.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_electric_plant_depreciation_functional_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_electric_plant_depreciation_functional_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'plant_function', 'plant_status', 'utility_type', name=op.f('pk_out_ferc1__yearly_electric_plant_depreciation_functional'))
    )
    op.create_table('out_ferc1__yearly_electricity_sales_by_rate_schedule',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('rate_schedule_type', sa.Text(), nullable=True, comment='Categorization of rate schedule type.'),
    sa.Column('billing_status', sa.Text(), nullable=True, comment='Whether an amount is billed, unbilled, or both. Billed amounts pertain to the exchange of energy and unbilled amounts pertain to other sources of revenue such as contracts with peaker plants to keep them on standby or charging rent to host cell antennas on transmission towers.'),
    sa.Column('rate_schedule_description', sa.Text(), nullable=True, comment='Free-form description of what the rate schedule name is. Not standardized. Often a sub-category of rate_schedule_type.'),
    sa.Column('sales_mwh', sa.Float(), nullable=True, comment='Quantity of electricity sold in MWh.'),
    sa.Column('dollar_value', sa.Float(), nullable=True, comment='Dollar value of reported income, expense, asset, or liability.'),
    sa.Column('avg_customers_per_month', sa.Float(), nullable=True, comment='Average number of customers per month.'),
    sa.Column('kwh_per_customer', sa.Float(), nullable=True, comment='kwh per customer.'),
    sa.Column('revenue_per_kwh', sa.Float(), nullable=True),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_electricity_sales_by_rate_schedule_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_electricity_sales_by_rate_schedule_utility_id_pudl_core_pudl__entity_utilities_pudl'))
    )
    op.create_table('out_ferc1__yearly_income_statement',
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_type', sa.Text(), nullable=False, comment='Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.'),
    sa.Column('income_type', sa.Text(), nullable=False, comment='Type of income reported in income_statement_ferc1 table.'),
    sa.Column('dollar_value', sa.Float(), nullable=True, comment='Dollar value of reported income, expense, asset, or liability.'),
    sa.Column('balance', sa.Text(), nullable=True, comment='Indication of whether a column is a credit or debit, as reported in the XBRL taxonomy.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_income_statement_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_income_statement_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'utility_type', 'income_type', name=op.f('pk_out_ferc1__yearly_income_statement'))
    )
    op.create_table('out_ferc1__yearly_other_regulatory_liabilities',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('description', sa.Text(), nullable=True, comment='Long human-readable description of the meaning of a code/label.'),
    sa.Column('ending_balance', sa.Float(), nullable=True, comment='Account balance at end of year.'),
    sa.Column('starting_balance', sa.Float(), nullable=True, comment='Account balance at beginning of year.'),
    sa.Column('increase_in_other_regulatory_liabilities', sa.Float(), nullable=True, comment='The increase during the reporting period of other regulatory liabilities.'),
    sa.Column('account_detail', sa.Text(), nullable=True, comment='Description of the account number credited from making debit adjustment to other regulatory liabilities.'),
    sa.Column('decrease_in_other_regulatory_liabilities', sa.Float(), nullable=True, comment='The decrease during the reporting period of other regulatory liabilities.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_other_regulatory_liabilities_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_other_regulatory_liabilities_utility_id_pudl_core_pudl__entity_utilities_pudl'))
    )
    op.create_table('out_ferc1__yearly_plant_in_service',
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('additions', sa.Float(), nullable=True, comment='Cost of acquisition of items classified within the account.'),
    sa.Column('adjustments', sa.Float(), nullable=True, comment='Cost of adjustments to the account.'),
    sa.Column('ending_balance', sa.Float(), nullable=True, comment='Account balance at end of year.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('ferc_account_label', sa.Text(), nullable=False, comment='Long FERC account identifier derived from values reported in the XBRL taxonomies. May also refer to aggregations of individual FERC accounts.'),
    sa.Column('retirements', sa.Float(), nullable=True, comment='Cost of disposal of items classified within the account.'),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.Column('starting_balance', sa.Float(), nullable=True, comment='Account balance at beginning of year.'),
    sa.Column('transfers', sa.Float(), nullable=True, comment='Cost of transfers into (out of) the account.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_plant_in_service_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_plant_in_service_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'ferc_account_label', name=op.f('pk_out_ferc1__yearly_plant_in_service'))
    )
    op.create_table('out_ferc1__yearly_purchased_power',
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('seller_name', sa.Text(), nullable=True, comment='Name of the seller, or the other party in an exchange transaction.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('billing_demand_mw', sa.Float(), nullable=True, comment='Monthly average billing demand (for requirements purchases, and any transactions involving demand charges). In megawatts.'),
    sa.Column('coincident_peak_demand_mw', sa.Float(), nullable=True, comment="Average monthly coincident peak (CP) demand (for requirements purchases, and any transactions involving demand charges). Monthly CP demand is the metered demand during the hour (60-minute integration) in which the supplier's system reaches its monthly peak. In megawatts."),
    sa.Column('delivered_mwh', sa.Float(), nullable=True, comment='Gross megawatt-hours delivered in power exchanges and used as the basis for settlement.'),
    sa.Column('demand_charges', sa.Float(), nullable=True, comment='Demand charges (USD).'),
    sa.Column('energy_charges', sa.Float(), nullable=True, comment='Energy charges (USD).'),
    sa.Column('non_coincident_peak_demand_mw', sa.Float(), nullable=True, comment='Average monthly non-coincident peak (NCP) demand (for requirements purhcases, and any transactions involving demand charges). Monthly NCP demand is the maximum metered hourly (60-minute integration) demand in a month. In megawatts.'),
    sa.Column('other_charges', sa.Float(), nullable=True, comment='Other charges, including out-of-period adjustments (USD).'),
    sa.Column('purchase_type_code', sa.Text(), nullable=True, comment="Categorization based on the original contractual terms and conditions of the service. Must be one of 'requirements', 'long_firm', 'intermediate_firm', 'short_firm', 'long_unit', 'intermediate_unit', 'electricity_exchange', 'other_service', or 'adjustment'. Requirements service is ongoing high reliability service, with load integrated into system resource planning. 'Long term' means 5+ years. 'Intermediate term' is 1-5 years. 'Short term' is less than 1 year. 'Firm' means not interruptible for economic reasons. 'unit' indicates service from a particular designated generating unit. 'exchange' is an in-kind transaction."),
    sa.Column('purchased_mwh', sa.Float(), nullable=True, comment='Megawatt-hours shown on bills rendered to the respondent.'),
    sa.Column('received_mwh', sa.Float(), nullable=True, comment='Gross megawatt-hours received in power exchanges and used as the basis for settlement.'),
    sa.Column('tariff', sa.Text(), nullable=True, comment='FERC Rate Schedule Number or Tariff. (Note: may be incomplete if originally reported on multiple lines.)'),
    sa.Column('total_settlement', sa.Float(), nullable=True, comment='Sum of demand, energy, and other charges (USD). For power exchanges, the settlement amount for the net receipt of energy. If more energy was delivered than received, this amount is negative.'),
    sa.ForeignKeyConstraint(['purchase_type_code'], ['core_ferc1__codes_power_purchase_types.code'], name=op.f('fk_out_ferc1__yearly_purchased_power_purchase_type_code_core_ferc1__codes_power_purchase_types')),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_purchased_power_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_purchased_power_utility_id_pudl_core_pudl__entity_utilities_pudl'))
    )
    op.create_table('out_ferc1__yearly_retained_earnings',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('earnings_type', sa.Text(), nullable=False, comment='Label describing types of earnings.'),
    sa.Column('starting_balance', sa.Float(), nullable=True, comment='Account balance at beginning of year.'),
    sa.Column('ending_balance', sa.Float(), nullable=True, comment='Account balance at end of year.'),
    sa.Column('balance', sa.Text(), nullable=True, comment='Indication of whether a column is a credit or debit, as reported in the XBRL taxonomy.'),
    sa.Column('ferc_account', sa.Text(), nullable=True, comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting."),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_retained_earnings_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_retained_earnings_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'earnings_type', name=op.f('pk_out_ferc1__yearly_retained_earnings'))
    )
    op.create_table('out_ferc1__yearly_transmission_statistics',
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('start_point', sa.Text(), nullable=True, comment='The starting point of a transmission line.'),
    sa.Column('end_point', sa.Text(), nullable=True, comment='The end point of a transmission line.'),
    sa.Column('operating_voltage_kv', sa.Float(), nullable=True, comment='The operating voltage, expressed kilo-volts, for three-phase 60 cycle alternative current transmission lines.'),
    sa.Column('designed_voltage_kv', sa.Float(), nullable=True, comment='Manufactured (Designed) voltage, expressed in kilo-volts, for three-phase 60 cycle alternative current transmission lines'),
    sa.Column('supporting_structure_type', sa.Text(), nullable=True, comment='Supporting structure of the transmission line.'),
    sa.Column('transmission_line_length_miles', sa.Float(), nullable=True, comment='Length (in pole miles or circuit miles (if transmission lines are underground)) for lines that are stand alone structures (whose cost are reported on a stand-alone basis).'),
    sa.Column('transmission_line_and_structures_length_miles', sa.Float(), nullable=True, comment='Length (in pole miles or circuit miles (if transmission lines are underground)) for lines that are agrregated with other lines / structures (whose cost are aggregated and combined with other structures).'),
    sa.Column('num_transmission_circuits', sa.Integer(), nullable=True, comment='Number of circuits in a transmission line.'),
    sa.Column('conductor_size_and_material', sa.Text(), nullable=True, comment='Size of transmission conductor and material of the transmission line.'),
    sa.Column('capex_land', sa.Float(), nullable=True, comment='Cost of plant: land and land rights (USD).'),
    sa.Column('capex_other', sa.Float(), nullable=True, comment='Other costs associated with the plant (USD).'),
    sa.Column('capex_total', sa.Float(), nullable=True, comment='Total cost of plant (USD).'),
    sa.Column('opex_operations', sa.Float(), nullable=True, comment='Production expenses: operations, supervision, and engineering (USD).'),
    sa.Column('opex_maintenance', sa.Float(), nullable=True, comment='Production expenses: Maintenance (USD).'),
    sa.Column('opex_rents', sa.Float(), nullable=True, comment='Production expenses: rents (USD).'),
    sa.Column('opex_total', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_transmission_statistics_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_transmission_statistics_utility_id_pudl_core_pudl__entity_utilities_pudl'))
    )
    op.create_table('out_ferc1__yearly_utility_plant_summary',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_type', sa.Text(), nullable=False, comment='Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.'),
    sa.Column('utility_type_other', sa.Text(), nullable=True, comment='Freeform description of type of utility reported in one of the other three other utility_type sections in the core_ferc1__yearly_utility_plant_summary table. This field is reported only in the DBF reporting years (1994-2020).'),
    sa.Column('utility_plant_asset_type', sa.Text(), nullable=False, comment='Type of utility plant asset reported in the core_ferc1__yearly_utility_plant_summary table. Assets include those leased to others, held for future use, construction work-in-progress and details of accumulated depreciation.'),
    sa.Column('row_type_xbrl', sa.Enum('calculated_value', 'reported_value', 'correction'), nullable=True, comment='Indicates whether the value reported in the row is calculated, or uniquely reported within the table.'),
    sa.Column('ending_balance', sa.Float(), nullable=True, comment='Account balance at end of year.'),
    sa.Column('record_id', sa.Text(), nullable=True, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name=op.f('fk_out_ferc1__yearly_utility_plant_summary_utility_id_ferc1_core_pudl__assn_utilities_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_utility_plant_summary_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'utility_type', 'utility_plant_asset_type', name=op.f('pk_out_ferc1__yearly_utility_plant_summary'))
    )
    op.create_table('_out_ferc1__yearly_hydro_plants',
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('plant_name_ferc1', sa.Text(), nullable=True, comment='Name of the plant, as reported to FERC. This is a freeform string, not guaranteed to be consistent across references to the same plant.'),
    sa.Column('record_id', sa.Text(), nullable=False, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('asset_retirement_cost', sa.Float(), nullable=True, comment='Asset retirement cost (USD).'),
    sa.Column('avg_num_employees', sa.Float(), nullable=True),
    sa.Column('capacity_factor', sa.Float(), nullable=True, comment='Fraction of potential generation that was actually reported for a plant part.'),
    sa.Column('capacity_mw', sa.Float(), nullable=True, comment='Total installed (nameplate) capacity, in megawatts.'),
    sa.Column('capex_equipment', sa.Float(), nullable=True, comment='Cost of plant: equipment (USD).'),
    sa.Column('capex_facilities', sa.Float(), nullable=True, comment='Cost of plant: reservoirs, dams, and waterways (USD).'),
    sa.Column('capex_land', sa.Float(), nullable=True, comment='Cost of plant: land and land rights (USD).'),
    sa.Column('capex_per_mw', sa.Float(), nullable=True, comment='Cost of plant per megawatt of installed (nameplate) capacity. Nominal USD.'),
    sa.Column('capex_roads', sa.Float(), nullable=True, comment='Cost of plant: roads, railroads, and bridges (USD).'),
    sa.Column('capex_structures', sa.Float(), nullable=True, comment='Cost of plant: structures and improvements (USD).'),
    sa.Column('capex_total', sa.Float(), nullable=True, comment='Total cost of plant (USD).'),
    sa.Column('construction_type', sa.Enum('conventional', 'outdoor', 'semioutdoor'), nullable=True, comment="Type of plant construction ('outdoor', 'semioutdoor', or 'conventional'). Categorized by PUDL based on our best guess of intended value in FERC1 freeform strings."),
    sa.Column('construction_year', sa.Integer(), nullable=True, comment="Year the plant's oldest still operational unit was built."),
    sa.Column('installation_year', sa.Integer(), nullable=True, comment="Year the plant's most recently built unit was installed."),
    sa.Column('net_capacity_adverse_conditions_mw', sa.Float(), nullable=True, comment='Net plant capability under the least favorable operating conditions, in megawatts.'),
    sa.Column('net_capacity_favorable_conditions_mw', sa.Float(), nullable=True, comment='Net plant capability under the most favorable operating conditions, in megawatts.'),
    sa.Column('net_generation_mwh', sa.Float(), nullable=True, comment='Net electricity generation for the specified period in megawatt-hours (MWh).'),
    sa.Column('opex_dams', sa.Float(), nullable=True, comment='Production expenses: maintenance of reservoirs, dams, and waterways (USD).'),
    sa.Column('opex_electric', sa.Float(), nullable=True, comment='Production expenses: electric expenses (USD).'),
    sa.Column('opex_engineering', sa.Float(), nullable=True, comment='Production expenses: maintenance, supervision, and engineering (USD).'),
    sa.Column('opex_generation_misc', sa.Float(), nullable=True, comment='Production expenses: miscellaneous power generation expenses (USD).'),
    sa.Column('opex_hydraulic', sa.Float(), nullable=True, comment='Production expenses: hydraulic expenses (USD).'),
    sa.Column('opex_misc_plant', sa.Float(), nullable=True, comment='Production expenses: maintenance of miscellaneous hydraulic plant (USD).'),
    sa.Column('opex_operations', sa.Float(), nullable=True, comment='Production expenses: operations, supervision, and engineering (USD).'),
    sa.Column('opex_per_mwh', sa.Float(), nullable=True, comment='Total production expenses (USD per MWh generated).'),
    sa.Column('opex_plant', sa.Float(), nullable=True, comment='Production expenses: maintenance of electric plant (USD).'),
    sa.Column('opex_rents', sa.Float(), nullable=True, comment='Production expenses: rents (USD).'),
    sa.Column('opex_structures', sa.Float(), nullable=True, comment='Production expenses: maintenance of structures (USD).'),
    sa.Column('opex_total', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('opex_total_nonfuel', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('opex_water_for_power', sa.Float(), nullable=True, comment='Production expenses: water for power (USD).'),
    sa.Column('peak_demand_mw', sa.Float(), nullable=True, comment='Net peak demand for 60 minutes. Note: in some cases peak demand for other time periods may have been reported instead, if hourly peak demand was unavailable.'),
    sa.Column('plant_hours_connected_while_generating', sa.Float(), nullable=True, comment='Hours the plant was connected to load while generating in the report year.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('plant_type', sa.Text(), nullable=True),
    sa.Column('project_num', sa.Integer(), nullable=True, comment='FERC Licensed Project Number.'),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk__out_ferc1__yearly_hydro_plants_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name=op.f('fk__out_ferc1__yearly_hydro_plants_utility_id_ferc1_core_pudl__assn_plants_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk__out_ferc1__yearly_hydro_plants_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('record_id', name=op.f('pk__out_ferc1__yearly_hydro_plants'))
    )
    op.create_table('_out_ferc1__yearly_plants_utilities',
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('plant_name_ferc1', sa.Text(), nullable=False, comment='Name of the plant, as reported to FERC. This is a freeform string, not guaranteed to be consistent across references to the same plant.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk__out_ferc1__yearly_plants_utilities_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name=op.f('fk__out_ferc1__yearly_plants_utilities_utility_id_ferc1_core_pudl__assn_plants_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk__out_ferc1__yearly_plants_utilities_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'plant_name_ferc1', name=op.f('pk__out_ferc1__yearly_plants_utilities'))
    )
    op.create_table('_out_ferc1__yearly_pumped_storage_plants',
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('plant_name_ferc1', sa.Text(), nullable=True, comment='Name of the plant, as reported to FERC. This is a freeform string, not guaranteed to be consistent across references to the same plant.'),
    sa.Column('record_id', sa.Text(), nullable=False, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('asset_retirement_cost', sa.Float(), nullable=True, comment='Asset retirement cost (USD).'),
    sa.Column('avg_num_employees', sa.Float(), nullable=True),
    sa.Column('capacity_factor', sa.Float(), nullable=True, comment='Fraction of potential generation that was actually reported for a plant part.'),
    sa.Column('capacity_mw', sa.Float(), nullable=True, comment='Total installed (nameplate) capacity, in megawatts.'),
    sa.Column('capex_equipment_electric', sa.Float(), nullable=True, comment='Cost of plant: accessory electric equipment (USD).'),
    sa.Column('capex_equipment_misc', sa.Float(), nullable=True, comment='Cost of plant: miscellaneous power plant equipment (USD).'),
    sa.Column('capex_facilities', sa.Float(), nullable=True, comment='Cost of plant: reservoirs, dams, and waterways (USD).'),
    sa.Column('capex_land', sa.Float(), nullable=True, comment='Cost of plant: land and land rights (USD).'),
    sa.Column('capex_per_mw', sa.Float(), nullable=True, comment='Cost of plant per megawatt of installed (nameplate) capacity. Nominal USD.'),
    sa.Column('capex_roads', sa.Float(), nullable=True, comment='Cost of plant: roads, railroads, and bridges (USD).'),
    sa.Column('capex_structures', sa.Float(), nullable=True, comment='Cost of plant: structures and improvements (USD).'),
    sa.Column('capex_total', sa.Float(), nullable=True, comment='Total cost of plant (USD).'),
    sa.Column('capex_wheels_turbines_generators', sa.Float(), nullable=True, comment='Cost of plant: water wheels, turbines, and generators (USD).'),
    sa.Column('construction_type', sa.Enum('conventional', 'outdoor', 'semioutdoor'), nullable=True, comment="Type of plant construction ('outdoor', 'semioutdoor', or 'conventional'). Categorized by PUDL based on our best guess of intended value in FERC1 freeform strings."),
    sa.Column('construction_year', sa.Integer(), nullable=True, comment="Year the plant's oldest still operational unit was built."),
    sa.Column('energy_used_for_pumping_mwh', sa.Float(), nullable=True, comment='Energy used for pumping, in megawatt-hours.'),
    sa.Column('installation_year', sa.Integer(), nullable=True, comment="Year the plant's most recently built unit was installed."),
    sa.Column('net_generation_mwh', sa.Float(), nullable=True, comment='Net electricity generation for the specified period in megawatt-hours (MWh).'),
    sa.Column('net_load_mwh', sa.Float(), nullable=True, comment='Net output for load (net generation - energy used for pumping) in megawatt-hours.'),
    sa.Column('opex_dams', sa.Float(), nullable=True, comment='Production expenses: maintenance of reservoirs, dams, and waterways (USD).'),
    sa.Column('opex_electric', sa.Float(), nullable=True, comment='Production expenses: electric expenses (USD).'),
    sa.Column('opex_engineering', sa.Float(), nullable=True, comment='Production expenses: maintenance, supervision, and engineering (USD).'),
    sa.Column('opex_generation_misc', sa.Float(), nullable=True, comment='Production expenses: miscellaneous power generation expenses (USD).'),
    sa.Column('opex_misc_plant', sa.Float(), nullable=True, comment='Production expenses: maintenance of miscellaneous hydraulic plant (USD).'),
    sa.Column('opex_operations', sa.Float(), nullable=True, comment='Production expenses: operations, supervision, and engineering (USD).'),
    sa.Column('opex_per_mwh', sa.Float(), nullable=True, comment='Total production expenses (USD per MWh generated).'),
    sa.Column('opex_plant', sa.Float(), nullable=True, comment='Production expenses: maintenance of electric plant (USD).'),
    sa.Column('opex_production_before_pumping', sa.Float(), nullable=True, comment='Total production expenses before pumping (USD).'),
    sa.Column('opex_pumped_storage', sa.Float(), nullable=True, comment='Production expenses: pumped storage (USD).'),
    sa.Column('opex_pumping', sa.Float(), nullable=True, comment='Production expenses: We are here to PUMP YOU UP! (USD).'),
    sa.Column('opex_rents', sa.Float(), nullable=True, comment='Production expenses: rents (USD).'),
    sa.Column('opex_structures', sa.Float(), nullable=True, comment='Production expenses: maintenance of structures (USD).'),
    sa.Column('opex_total', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('opex_total_nonfuel', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('opex_water_for_power', sa.Float(), nullable=True, comment='Production expenses: water for power (USD).'),
    sa.Column('peak_demand_mw', sa.Float(), nullable=True, comment='Net peak demand for 60 minutes. Note: in some cases peak demand for other time periods may have been reported instead, if hourly peak demand was unavailable.'),
    sa.Column('plant_capability_mw', sa.Float(), nullable=True, comment='Net plant capability in megawatts.'),
    sa.Column('plant_hours_connected_while_generating', sa.Float(), nullable=True, comment='Hours the plant was connected to load while generating in the report year.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('project_num', sa.Integer(), nullable=True, comment='FERC Licensed Project Number.'),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk__out_ferc1__yearly_pumped_storage_plants_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name=op.f('fk__out_ferc1__yearly_pumped_storage_plants_utility_id_ferc1_core_pudl__assn_plants_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk__out_ferc1__yearly_pumped_storage_plants_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('record_id', name=op.f('pk__out_ferc1__yearly_pumped_storage_plants'))
    )
    op.create_table('_out_ferc1__yearly_small_plants',
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('plant_name_ferc1', sa.Text(), nullable=True, comment='Name of the plant, as reported to FERC. This is a freeform string, not guaranteed to be consistent across references to the same plant.'),
    sa.Column('record_id', sa.Text(), nullable=False, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('capacity_mw', sa.Float(), nullable=True, comment='Total installed (nameplate) capacity, in megawatts.'),
    sa.Column('capex_per_mw', sa.Float(), nullable=True, comment='Cost of plant per megawatt of installed (nameplate) capacity. Nominal USD.'),
    sa.Column('capex_total', sa.Float(), nullable=True, comment='Total cost of plant (USD).'),
    sa.Column('construction_year', sa.Integer(), nullable=True, comment="Year the plant's oldest still operational unit was built."),
    sa.Column('fuel_cost_per_mmbtu', sa.Float(), nullable=True, comment='Average fuel cost per mmBTU of heat content in nominal USD.'),
    sa.Column('fuel_type', sa.Text(), nullable=True),
    sa.Column('license_id_ferc1', sa.Integer(), nullable=True, comment='FERC issued operating license ID for the facility, if available. This value is extracted from the original plant name where possible.'),
    sa.Column('net_generation_mwh', sa.Float(), nullable=True, comment='Net electricity generation for the specified period in megawatt-hours (MWh).'),
    sa.Column('opex_fuel', sa.Float(), nullable=True, comment='Production expenses: fuel (USD).'),
    sa.Column('opex_maintenance', sa.Float(), nullable=True, comment='Production expenses: Maintenance (USD).'),
    sa.Column('opex_operations', sa.Float(), nullable=True, comment='Production expenses: operations, supervision, and engineering (USD).'),
    sa.Column('opex_total', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('opex_total_nonfuel', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('peak_demand_mw', sa.Float(), nullable=True, comment='Net peak demand for 60 minutes. Note: in some cases peak demand for other time periods may have been reported instead, if hourly peak demand was unavailable.'),
    sa.Column('plant_type', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk__out_ferc1__yearly_small_plants_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name=op.f('fk__out_ferc1__yearly_small_plants_utility_id_ferc1_core_pudl__assn_plants_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk__out_ferc1__yearly_small_plants_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('record_id', name=op.f('pk__out_ferc1__yearly_small_plants'))
    )
    op.create_table('_out_ferc1__yearly_steam_plants',
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('plant_id_ferc1', sa.Integer(), nullable=True, comment='Algorithmically assigned PUDL FERC Plant ID. WARNING: NOT STABLE BETWEEN PUDL DB INITIALIZATIONS.'),
    sa.Column('plant_name_ferc1', sa.Text(), nullable=True, comment='Name of the plant, as reported to FERC. This is a freeform string, not guaranteed to be consistent across references to the same plant.'),
    sa.Column('asset_retirement_cost', sa.Float(), nullable=True, comment='Asset retirement cost (USD).'),
    sa.Column('avg_num_employees', sa.Float(), nullable=True),
    sa.Column('capacity_factor', sa.Float(), nullable=True, comment='Fraction of potential generation that was actually reported for a plant part.'),
    sa.Column('capacity_mw', sa.Float(), nullable=True, comment='Total installed (nameplate) capacity, in megawatts.'),
    sa.Column('capex_annual_addition', sa.Float(), nullable=True, comment='Annual capital addition into `capex_total`.'),
    sa.Column('capex_annual_addition_rolling', sa.Float(), nullable=True, comment='Year-to-date capital addition into `capex_total`.'),
    sa.Column('capex_annual_per_kw', sa.Float(), nullable=True, comment='Annual capital addition into `capex_total` per kw.'),
    sa.Column('capex_annual_per_mw', sa.Float(), nullable=True, comment='Annual capital addition into `capex_total` per MW.'),
    sa.Column('capex_annual_per_mw_rolling', sa.Float(), nullable=True, comment='Year-to-date capital addition into `capex_total` per MW.'),
    sa.Column('capex_annual_per_mwh', sa.Float(), nullable=True, comment='Annual capital addition into `capex_total` per MWh.'),
    sa.Column('capex_annual_per_mwh_rolling', sa.Float(), nullable=True, comment='Year-to-date capital addition into `capex_total` per MWh.'),
    sa.Column('capex_equipment', sa.Float(), nullable=True, comment='Cost of plant: equipment (USD).'),
    sa.Column('capex_land', sa.Float(), nullable=True, comment='Cost of plant: land and land rights (USD).'),
    sa.Column('capex_per_mw', sa.Float(), nullable=True, comment='Cost of plant per megawatt of installed (nameplate) capacity. Nominal USD.'),
    sa.Column('capex_structures', sa.Float(), nullable=True, comment='Cost of plant: structures and improvements (USD).'),
    sa.Column('capex_total', sa.Float(), nullable=True, comment='Total cost of plant (USD).'),
    sa.Column('capex_wo_retirement_total', sa.Float(), nullable=True, comment='Total cost of plant (USD) without retirements.'),
    sa.Column('construction_type', sa.Enum('conventional', 'outdoor', 'semioutdoor'), nullable=True, comment="Type of plant construction ('outdoor', 'semioutdoor', or 'conventional'). Categorized by PUDL based on our best guess of intended value in FERC1 freeform strings."),
    sa.Column('construction_year', sa.Integer(), nullable=True, comment="Year the plant's oldest still operational unit was built."),
    sa.Column('installation_year', sa.Integer(), nullable=True, comment="Year the plant's most recently built unit was installed."),
    sa.Column('net_generation_mwh', sa.Float(), nullable=True, comment='Net electricity generation for the specified period in megawatt-hours (MWh).'),
    sa.Column('not_water_limited_capacity_mw', sa.Float(), nullable=True, comment='Plant capacity in MW when not limited by condenser water.'),
    sa.Column('opex_allowances', sa.Float(), nullable=True, comment='Allowances.'),
    sa.Column('opex_boiler', sa.Float(), nullable=True, comment='Maintenance of boiler (or reactor) plant.'),
    sa.Column('opex_coolants', sa.Float(), nullable=True, comment='Cost of coolants and water (nuclear plants only)'),
    sa.Column('opex_electric', sa.Float(), nullable=True, comment='Production expenses: electric expenses (USD).'),
    sa.Column('opex_engineering', sa.Float(), nullable=True, comment='Production expenses: maintenance, supervision, and engineering (USD).'),
    sa.Column('opex_fuel', sa.Float(), nullable=True, comment='Production expenses: fuel (USD).'),
    sa.Column('opex_fuel_per_mwh', sa.Float(), nullable=True, comment='Production expenses: fuel (USD) per megawatt-hour (Mwh).'),
    sa.Column('opex_misc_power', sa.Float(), nullable=True, comment='Miscellaneous steam (or nuclear) expenses.'),
    sa.Column('opex_misc_steam', sa.Float(), nullable=True, comment='Maintenance of miscellaneous steam (or nuclear) plant.'),
    sa.Column('opex_nonfuel_per_mwh', sa.Float(), nullable=True, comment='Investments in non-fuel production expenses per Mwh.'),
    sa.Column('opex_operations', sa.Float(), nullable=True, comment='Production expenses: operations, supervision, and engineering (USD).'),
    sa.Column('opex_per_mwh', sa.Float(), nullable=True, comment='Total production expenses (USD per MWh generated).'),
    sa.Column('opex_plants', sa.Float(), nullable=True, comment='Maintenance of electrical plant.'),
    sa.Column('opex_production_total', sa.Float(), nullable=True, comment='Total operating expenses.'),
    sa.Column('opex_rents', sa.Float(), nullable=True, comment='Production expenses: rents (USD).'),
    sa.Column('opex_steam', sa.Float(), nullable=True, comment='Steam expenses.'),
    sa.Column('opex_steam_other', sa.Float(), nullable=True, comment='Steam from other sources.'),
    sa.Column('opex_structures', sa.Float(), nullable=True, comment='Production expenses: maintenance of structures (USD).'),
    sa.Column('opex_total_nonfuel', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('opex_transfer', sa.Float(), nullable=True, comment='Steam transferred (Credit).'),
    sa.Column('peak_demand_mw', sa.Float(), nullable=True, comment='Net peak demand for 60 minutes. Note: in some cases peak demand for other time periods may have been reported instead, if hourly peak demand was unavailable.'),
    sa.Column('plant_capability_mw', sa.Float(), nullable=True, comment='Net plant capability in megawatts.'),
    sa.Column('plant_hours_connected_while_generating', sa.Float(), nullable=True, comment='Hours the plant was connected to load while generating in the report year.'),
    sa.Column('plant_type', sa.Text(), nullable=True),
    sa.Column('record_id', sa.Text(), nullable=False, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('water_limited_capacity_mw', sa.Float(), nullable=True, comment='Plant capacity in MW when limited by condenser water.'),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk__out_ferc1__yearly_steam_plants_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name=op.f('fk__out_ferc1__yearly_steam_plants_utility_id_ferc1_core_pudl__assn_plants_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk__out_ferc1__yearly_steam_plants_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('record_id', name=op.f('pk__out_ferc1__yearly_steam_plants'))
    )
    op.create_table('out_ferc1__yearly_all_plants',
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('plant_id_ferc1', sa.Integer(), nullable=True, comment='Algorithmically assigned PUDL FERC Plant ID. WARNING: NOT STABLE BETWEEN PUDL DB INITIALIZATIONS.'),
    sa.Column('plant_name_ferc1', sa.Text(), nullable=True, comment='Name of the plant, as reported to FERC. This is a freeform string, not guaranteed to be consistent across references to the same plant.'),
    sa.Column('asset_retirement_cost', sa.Float(), nullable=True, comment='Asset retirement cost (USD).'),
    sa.Column('avg_num_employees', sa.Float(), nullable=True),
    sa.Column('capacity_factor', sa.Float(), nullable=True, comment='Fraction of potential generation that was actually reported for a plant part.'),
    sa.Column('capacity_mw', sa.Float(), nullable=True, comment='Total installed (nameplate) capacity, in megawatts.'),
    sa.Column('capex_annual_addition', sa.Float(), nullable=True, comment='Annual capital addition into `capex_total`.'),
    sa.Column('capex_annual_addition_rolling', sa.Float(), nullable=True, comment='Year-to-date capital addition into `capex_total`.'),
    sa.Column('capex_annual_per_kw', sa.Float(), nullable=True, comment='Annual capital addition into `capex_total` per kw.'),
    sa.Column('capex_annual_per_mw', sa.Float(), nullable=True, comment='Annual capital addition into `capex_total` per MW.'),
    sa.Column('capex_annual_per_mw_rolling', sa.Float(), nullable=True, comment='Year-to-date capital addition into `capex_total` per MW.'),
    sa.Column('capex_annual_per_mwh', sa.Float(), nullable=True, comment='Annual capital addition into `capex_total` per MWh.'),
    sa.Column('capex_annual_per_mwh_rolling', sa.Float(), nullable=True, comment='Year-to-date capital addition into `capex_total` per MWh.'),
    sa.Column('capex_equipment', sa.Float(), nullable=True, comment='Cost of plant: equipment (USD).'),
    sa.Column('capex_land', sa.Float(), nullable=True, comment='Cost of plant: land and land rights (USD).'),
    sa.Column('capex_per_mw', sa.Float(), nullable=True, comment='Cost of plant per megawatt of installed (nameplate) capacity. Nominal USD.'),
    sa.Column('capex_structures', sa.Float(), nullable=True, comment='Cost of plant: structures and improvements (USD).'),
    sa.Column('capex_total', sa.Float(), nullable=True, comment='Total cost of plant (USD).'),
    sa.Column('capex_wo_retirement_total', sa.Float(), nullable=True, comment='Total cost of plant (USD) without retirements.'),
    sa.Column('construction_type', sa.Enum('conventional', 'outdoor', 'semioutdoor'), nullable=True, comment="Type of plant construction ('outdoor', 'semioutdoor', or 'conventional'). Categorized by PUDL based on our best guess of intended value in FERC1 freeform strings."),
    sa.Column('construction_year', sa.Integer(), nullable=True, comment="Year the plant's oldest still operational unit was built."),
    sa.Column('installation_year', sa.Integer(), nullable=True, comment="Year the plant's most recently built unit was installed."),
    sa.Column('net_generation_mwh', sa.Float(), nullable=True, comment='Net electricity generation for the specified period in megawatt-hours (MWh).'),
    sa.Column('not_water_limited_capacity_mw', sa.Float(), nullable=True, comment='Plant capacity in MW when not limited by condenser water.'),
    sa.Column('opex_allowances', sa.Float(), nullable=True, comment='Allowances.'),
    sa.Column('opex_boiler', sa.Float(), nullable=True, comment='Maintenance of boiler (or reactor) plant.'),
    sa.Column('opex_coolants', sa.Float(), nullable=True, comment='Cost of coolants and water (nuclear plants only)'),
    sa.Column('opex_electric', sa.Float(), nullable=True, comment='Production expenses: electric expenses (USD).'),
    sa.Column('opex_engineering', sa.Float(), nullable=True, comment='Production expenses: maintenance, supervision, and engineering (USD).'),
    sa.Column('opex_fuel', sa.Float(), nullable=True, comment='Production expenses: fuel (USD).'),
    sa.Column('fuel_cost_per_mwh', sa.Float(), nullable=True, comment='Derived from MCOE, a unit level value. Average fuel cost per MWh of heat content in nominal USD.'),
    sa.Column('opex_misc_power', sa.Float(), nullable=True, comment='Miscellaneous steam (or nuclear) expenses.'),
    sa.Column('opex_misc_steam', sa.Float(), nullable=True, comment='Maintenance of miscellaneous steam (or nuclear) plant.'),
    sa.Column('opex_nonfuel_per_mwh', sa.Float(), nullable=True, comment='Investments in non-fuel production expenses per Mwh.'),
    sa.Column('opex_operations', sa.Float(), nullable=True, comment='Production expenses: operations, supervision, and engineering (USD).'),
    sa.Column('opex_per_mwh', sa.Float(), nullable=True, comment='Total production expenses (USD per MWh generated).'),
    sa.Column('opex_plant', sa.Float(), nullable=True, comment='Production expenses: maintenance of electric plant (USD).'),
    sa.Column('opex_production_total', sa.Float(), nullable=True, comment='Total operating expenses.'),
    sa.Column('opex_rents', sa.Float(), nullable=True, comment='Production expenses: rents (USD).'),
    sa.Column('opex_steam', sa.Float(), nullable=True, comment='Steam expenses.'),
    sa.Column('opex_steam_other', sa.Float(), nullable=True, comment='Steam from other sources.'),
    sa.Column('opex_structures', sa.Float(), nullable=True, comment='Production expenses: maintenance of structures (USD).'),
    sa.Column('opex_total_nonfuel', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('opex_transfer', sa.Float(), nullable=True, comment='Steam transferred (Credit).'),
    sa.Column('peak_demand_mw', sa.Float(), nullable=True, comment='Net peak demand for 60 minutes. Note: in some cases peak demand for other time periods may have been reported instead, if hourly peak demand was unavailable.'),
    sa.Column('plant_capability_mw', sa.Float(), nullable=True, comment='Net plant capability in megawatts.'),
    sa.Column('plant_hours_connected_while_generating', sa.Float(), nullable=True, comment='Hours the plant was connected to load while generating in the report year.'),
    sa.Column('plant_type', sa.Text(), nullable=True),
    sa.Column('record_id', sa.Text(), nullable=False, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.Column('water_limited_capacity_mw', sa.Float(), nullable=True, comment='Plant capacity in MW when limited by condenser water.'),
    sa.Column('fuel_cost_per_mmbtu', sa.Float(), nullable=True, comment='Average fuel cost per mmBTU of heat content in nominal USD.'),
    sa.Column('fuel_type', sa.Text(), nullable=True),
    sa.Column('license_id_ferc1', sa.Integer(), nullable=True, comment='FERC issued operating license ID for the facility, if available. This value is extracted from the original plant name where possible.'),
    sa.Column('opex_maintenance', sa.Float(), nullable=True, comment='Production expenses: Maintenance (USD).'),
    sa.Column('opex_total', sa.Float(), nullable=True, comment='Total production expenses, excluding fuel (USD).'),
    sa.Column('capex_facilities', sa.Float(), nullable=True, comment='Cost of plant: reservoirs, dams, and waterways (USD).'),
    sa.Column('capex_roads', sa.Float(), nullable=True, comment='Cost of plant: roads, railroads, and bridges (USD).'),
    sa.Column('net_capacity_adverse_conditions_mw', sa.Float(), nullable=True, comment='Net plant capability under the least favorable operating conditions, in megawatts.'),
    sa.Column('net_capacity_favorable_conditions_mw', sa.Float(), nullable=True, comment='Net plant capability under the most favorable operating conditions, in megawatts.'),
    sa.Column('opex_dams', sa.Float(), nullable=True, comment='Production expenses: maintenance of reservoirs, dams, and waterways (USD).'),
    sa.Column('opex_generation_misc', sa.Float(), nullable=True, comment='Production expenses: miscellaneous power generation expenses (USD).'),
    sa.Column('opex_hydraulic', sa.Float(), nullable=True, comment='Production expenses: hydraulic expenses (USD).'),
    sa.Column('opex_misc_plant', sa.Float(), nullable=True, comment='Production expenses: maintenance of miscellaneous hydraulic plant (USD).'),
    sa.Column('opex_water_for_power', sa.Float(), nullable=True, comment='Production expenses: water for power (USD).'),
    sa.Column('ferc_license_id', sa.Text(), nullable=True, comment='The FERC license ID of a project.'),
    sa.Column('capex_equipment_electric', sa.Float(), nullable=True, comment='Cost of plant: accessory electric equipment (USD).'),
    sa.Column('capex_equipment_misc', sa.Float(), nullable=True, comment='Cost of plant: miscellaneous power plant equipment (USD).'),
    sa.Column('capex_wheels_turbines_generators', sa.Float(), nullable=True, comment='Cost of plant: water wheels, turbines, and generators (USD).'),
    sa.Column('energy_used_for_pumping_mwh', sa.Float(), nullable=True, comment='Energy used for pumping, in megawatt-hours.'),
    sa.Column('net_load_mwh', sa.Float(), nullable=True, comment='Net output for load (net generation - energy used for pumping) in megawatt-hours.'),
    sa.Column('opex_production_before_pumping', sa.Float(), nullable=True, comment='Total production expenses before pumping (USD).'),
    sa.Column('opex_pumped_storage', sa.Float(), nullable=True, comment='Production expenses: pumped storage (USD).'),
    sa.Column('opex_pumping', sa.Float(), nullable=True, comment='Production expenses: We are here to PUMP YOU UP! (USD).'),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk_out_ferc1__yearly_all_plants_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name=op.f('fk_out_ferc1__yearly_all_plants_utility_id_ferc1_core_pudl__assn_plants_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_all_plants_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('record_id', name=op.f('pk_out_ferc1__yearly_all_plants'))
    )
    op.create_table('out_ferc1__yearly_fuel',
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=True, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('plant_name_ferc1', sa.Text(), nullable=True, comment='Name of the plant, as reported to FERC. This is a freeform string, not guaranteed to be consistent across references to the same plant.'),
    sa.Column('fuel_consumed_mmbtu', sa.Float(), nullable=True, comment='Total consumption of fuel in physical unit, year to date. Note: this is the total quantity consumed for both electricity and, in the case of combined heat and power plants, process steam production.'),
    sa.Column('fuel_consumed_total_cost', sa.Float(), nullable=True, comment='Total cost of consumed fuel.'),
    sa.Column('fuel_consumed_units', sa.Float(), nullable=True, comment='Consumption of the fuel type in physical unit. Note: this is the total quantity consumed for both electricity and, in the case of combined heat and power plants, process steam production.'),
    sa.Column('fuel_cost_per_mmbtu', sa.Float(), nullable=True, comment='Average fuel cost per mmBTU of heat content in nominal USD.'),
    sa.Column('fuel_cost_per_unit_burned', sa.Float(), nullable=True, comment='Average cost of fuel consumed in the report year per reported fuel unit (USD).'),
    sa.Column('fuel_cost_per_unit_delivered', sa.Float(), nullable=True, comment='Average cost of fuel delivered in the report year per reported fuel unit (USD).'),
    sa.Column('fuel_mmbtu_per_unit', sa.Float(), nullable=True, comment='Heat content of the fuel in millions of Btus per physical unit.'),
    sa.Column('fuel_type_code_pudl', sa.Enum('coal', 'gas', 'hydro', 'nuclear', 'oil', 'other', 'solar', 'waste', 'wind'), nullable=True, comment='Simplified fuel type code used in PUDL'),
    sa.Column('fuel_units', sa.Enum('mmbtu', 'gramsU', 'kg', 'mwhth', 'kgal', 'bbl', 'klbs', 'mcf', 'gal', 'mwdth', 'btu', 'ton'), nullable=True, comment='Reported unit of measure for fuel.'),
    sa.Column('record_id', sa.Text(), nullable=False, comment='Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.'),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk_out_ferc1__yearly_fuel_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name=op.f('fk_out_ferc1__yearly_fuel_utility_id_ferc1_core_pudl__assn_plants_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_fuel_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('record_id', name=op.f('pk_out_ferc1__yearly_fuel'))
    )
    op.create_table('out_ferc1__yearly_fuel_by_plant',
    sa.Column('report_year', sa.Integer(), nullable=False, comment='Four-digit year in which the data was reported.'),
    sa.Column('utility_id_ferc1', sa.Integer(), nullable=False, comment='PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('utility_name_ferc1', sa.Text(), nullable=True, comment='Name of the responding utility, as it is reported in FERC Form 1. For human readability only.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('plant_name_ferc1', sa.Text(), nullable=False, comment='Name of the plant, as reported to FERC. This is a freeform string, not guaranteed to be consistent across references to the same plant.'),
    sa.Column('coal_fraction_cost', sa.Float(), nullable=True, comment='Coal cost as a percentage of overall fuel cost.'),
    sa.Column('coal_fraction_mmbtu', sa.Float(), nullable=True, comment='Coal heat content as a percentage of overall fuel heat content (mmBTU).'),
    sa.Column('fuel_cost', sa.Float(), nullable=True, comment='Total fuel cost for plant (in $USD).'),
    sa.Column('fuel_mmbtu', sa.Float(), nullable=True, comment='Total heat content for plant (in MMBtu).'),
    sa.Column('gas_fraction_cost', sa.Float(), nullable=True, comment='Natural gas cost as a percentage of overall fuel cost.'),
    sa.Column('gas_fraction_mmbtu', sa.Float(), nullable=True, comment='Natural gas heat content as a percentage of overall fuel heat content (MMBtu).'),
    sa.Column('nuclear_fraction_cost', sa.Float(), nullable=True, comment='Nuclear cost as a percentage of overall fuel cost.'),
    sa.Column('nuclear_fraction_mmbtu', sa.Float(), nullable=True, comment='Nuclear heat content as a percentage of overall fuel heat content (MMBtu).'),
    sa.Column('oil_fraction_cost', sa.Float(), nullable=True, comment='Oil cost as a percentage of overall fuel cost.'),
    sa.Column('oil_fraction_mmbtu', sa.Float(), nullable=True, comment='Oil heat content as a percentage of overall fuel heat content (MMBtu).'),
    sa.Column('primary_fuel_by_cost', sa.Text(), nullable=True, comment='Primary fuel for plant as a percentage of cost.'),
    sa.Column('primary_fuel_by_mmbtu', sa.Text(), nullable=True, comment='Primary fuel for plant as a percentage of heat content.'),
    sa.Column('waste_fraction_cost', sa.Float(), nullable=True, comment='Waste-heat cost as a percentage of overall fuel cost.'),
    sa.Column('waste_fraction_mmbtu', sa.Float(), nullable=True, comment='Waste-heat heat content as a percentage of overall fuel heat content (MMBtu).'),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk_out_ferc1__yearly_fuel_by_plant_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name=op.f('fk_out_ferc1__yearly_fuel_by_plant_utility_id_ferc1_core_pudl__assn_plants_ferc1')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_ferc1__yearly_fuel_by_plant_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('report_year', 'utility_id_ferc1', 'plant_name_ferc1', name=op.f('pk_out_ferc1__yearly_fuel_by_plant'))
    )
    op.drop_table('denorm_plants_small_ferc1')
    op.drop_table('denorm_plant_in_service_ferc1')
    op.drop_table('denorm_plants_steam_ferc1')
    op.drop_table('denorm_income_statement_ferc1')
    op.drop_table('denorm_other_regulatory_liabilities_ferc1')
    op.drop_table('denorm_utility_plant_summary_ferc1')
    op.drop_table('denorm_transmission_statistics_ferc1')
    op.drop_table('denorm_electricity_sales_by_rate_schedule_ferc1')
    op.drop_table('denorm_plants_hydro_ferc1')
    op.drop_table('denorm_electric_operating_expenses_ferc1')
    op.drop_table('denorm_cash_flow_ferc1')
    op.drop_table('denorm_purchased_power_ferc1')
    op.drop_table('denorm_plants_all_ferc1')
    op.drop_table('denorm_plants_pumped_storage_ferc1')
    op.drop_table('denorm_fuel_by_plant_ferc1')
    op.drop_table('denorm_electric_operating_revenues_ferc1')
    op.drop_table('denorm_electric_plant_depreciation_functional_ferc1')
    op.drop_table('denorm_electric_energy_dispositions_ferc1')
    op.drop_table('denorm_balance_sheet_assets_ferc1')
    op.drop_table('denorm_plants_utilities_ferc1')
    op.drop_table('denorm_balance_sheet_liabilities_ferc1')
    op.drop_table('denorm_retained_earnings_ferc1')
    op.drop_table('denorm_depreciation_amortization_summary_ferc1')
    op.drop_table('denorm_electric_plant_depreciation_changes_ferc1')
    op.drop_table('denorm_electric_energy_sources_ferc1')
    op.drop_table('denorm_fuel_ferc1')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('denorm_fuel_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('plant_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('fuel_consumed_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('fuel_consumed_total_cost', sa.FLOAT(), nullable=True),
    sa.Column('fuel_consumed_units', sa.FLOAT(), nullable=True),
    sa.Column('fuel_cost_per_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('fuel_cost_per_unit_burned', sa.FLOAT(), nullable=True),
    sa.Column('fuel_cost_per_unit_delivered', sa.FLOAT(), nullable=True),
    sa.Column('fuel_mmbtu_per_unit', sa.FLOAT(), nullable=True),
    sa.Column('fuel_type_code_pudl', sa.VARCHAR(length=7), nullable=True),
    sa.Column('fuel_units', sa.VARCHAR(length=6), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_denorm_fuel_ferc1_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name='fk_denorm_fuel_ferc1_utility_id_ferc1_core_pudl__assn_plants_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_fuel_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('record_id', name='pk_denorm_fuel_ferc1')
    )
    op.create_table('denorm_electric_energy_sources_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('energy_source_type', sa.TEXT(), nullable=False),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.Column('energy_mwh', sa.FLOAT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_electric_energy_sources_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_electric_energy_sources_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'energy_source_type', name='pk_denorm_electric_energy_sources_ferc1')
    )
    op.create_table('denorm_electric_plant_depreciation_changes_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('depreciation_type', sa.TEXT(), nullable=False),
    sa.Column('plant_status', sa.TEXT(), nullable=False),
    sa.Column('utility_type', sa.TEXT(), nullable=False),
    sa.Column('dollar_value', sa.FLOAT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('balance', sa.TEXT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_electric_plant_depreciation_changes_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_electric_plant_depreciation_changes_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'depreciation_type', 'plant_status', 'utility_type', name='pk_denorm_electric_plant_depreciation_changes_ferc1')
    )
    op.create_table('denorm_depreciation_amortization_summary_ferc1',
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('plant_function', sa.TEXT(), nullable=False),
    sa.Column('ferc_account_label', sa.TEXT(), nullable=False),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('dollar_value', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_depreciation_amortization_summary_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_depreciation_amortization_summary_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'plant_function', 'ferc_account_label', name='pk_denorm_depreciation_amortization_summary_ferc1')
    )
    op.create_table('denorm_retained_earnings_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('earnings_type', sa.TEXT(), nullable=False),
    sa.Column('starting_balance', sa.FLOAT(), nullable=True),
    sa.Column('ending_balance', sa.FLOAT(), nullable=True),
    sa.Column('balance', sa.TEXT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_retained_earnings_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_retained_earnings_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'earnings_type', name='pk_denorm_retained_earnings_ferc1')
    )
    op.create_table('denorm_balance_sheet_liabilities_ferc1',
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('starting_balance', sa.FLOAT(), nullable=True),
    sa.Column('ending_balance', sa.FLOAT(), nullable=True),
    sa.Column('liability_type', sa.TEXT(), nullable=False),
    sa.Column('balance', sa.TEXT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_balance_sheet_liabilities_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_balance_sheet_liabilities_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'liability_type', name='pk_denorm_balance_sheet_liabilities_ferc1')
    )
    op.create_table('denorm_plants_utilities_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('plant_name_ferc1', sa.TEXT(), nullable=False),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_denorm_plants_utilities_ferc1_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name='fk_denorm_plants_utilities_ferc1_utility_id_ferc1_core_pudl__assn_plants_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_plants_utilities_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'plant_name_ferc1', name='pk_denorm_plants_utilities_ferc1')
    )
    op.create_table('denorm_balance_sheet_assets_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('asset_type', sa.TEXT(), nullable=False),
    sa.Column('balance', sa.TEXT(), nullable=True),
    sa.Column('ending_balance', sa.FLOAT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.Column('starting_balance', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_balance_sheet_assets_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_balance_sheet_assets_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'asset_type', name='pk_denorm_balance_sheet_assets_ferc1')
    )
    op.create_table('denorm_electric_energy_dispositions_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('energy_disposition_type', sa.TEXT(), nullable=False),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.Column('energy_mwh', sa.FLOAT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_electric_energy_dispositions_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_electric_energy_dispositions_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'energy_disposition_type', name='pk_denorm_electric_energy_dispositions_ferc1')
    )
    op.create_table('denorm_electric_plant_depreciation_functional_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('plant_function', sa.TEXT(), nullable=False),
    sa.Column('plant_status', sa.TEXT(), nullable=False),
    sa.Column('utility_type', sa.TEXT(), nullable=False),
    sa.Column('ending_balance', sa.FLOAT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('balance', sa.TEXT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_electric_plant_depreciation_functional_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_electric_plant_depreciation_functional_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'plant_function', 'plant_status', 'utility_type', name='pk_denorm_electric_plant_depreciation_functional_ferc1')
    )
    op.create_table('denorm_electric_operating_revenues_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('revenue_type', sa.TEXT(), nullable=False),
    sa.Column('dollar_value', sa.FLOAT(), nullable=True),
    sa.Column('sales_mwh', sa.FLOAT(), nullable=True),
    sa.Column('avg_customers_per_month', sa.FLOAT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_electric_operating_revenues_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_electric_operating_revenues_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'revenue_type', name='pk_denorm_electric_operating_revenues_ferc1')
    )
    op.create_table('denorm_fuel_by_plant_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('plant_name_ferc1', sa.TEXT(), nullable=False),
    sa.Column('coal_fraction_cost', sa.FLOAT(), nullable=True),
    sa.Column('coal_fraction_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('fuel_cost', sa.FLOAT(), nullable=True),
    sa.Column('fuel_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('gas_fraction_cost', sa.FLOAT(), nullable=True),
    sa.Column('gas_fraction_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('nuclear_fraction_cost', sa.FLOAT(), nullable=True),
    sa.Column('nuclear_fraction_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('oil_fraction_cost', sa.FLOAT(), nullable=True),
    sa.Column('oil_fraction_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('primary_fuel_by_cost', sa.TEXT(), nullable=True),
    sa.Column('primary_fuel_by_mmbtu', sa.TEXT(), nullable=True),
    sa.Column('waste_fraction_cost', sa.FLOAT(), nullable=True),
    sa.Column('waste_fraction_mmbtu', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_denorm_fuel_by_plant_ferc1_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name='fk_denorm_fuel_by_plant_ferc1_utility_id_ferc1_core_pudl__assn_plants_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_fuel_by_plant_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('report_year', 'utility_id_ferc1', 'plant_name_ferc1', name='pk_denorm_fuel_by_plant_ferc1')
    )
    op.create_table('denorm_plants_pumped_storage_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('plant_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=False),
    sa.Column('asset_retirement_cost', sa.FLOAT(), nullable=True),
    sa.Column('avg_num_employees', sa.FLOAT(), nullable=True),
    sa.Column('capacity_factor', sa.FLOAT(), nullable=True),
    sa.Column('capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_equipment_electric', sa.FLOAT(), nullable=True),
    sa.Column('capex_equipment_misc', sa.FLOAT(), nullable=True),
    sa.Column('capex_facilities', sa.FLOAT(), nullable=True),
    sa.Column('capex_land', sa.FLOAT(), nullable=True),
    sa.Column('capex_per_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_roads', sa.FLOAT(), nullable=True),
    sa.Column('capex_structures', sa.FLOAT(), nullable=True),
    sa.Column('capex_total', sa.FLOAT(), nullable=True),
    sa.Column('capex_wheels_turbines_generators', sa.FLOAT(), nullable=True),
    sa.Column('construction_type', sa.VARCHAR(length=12), nullable=True),
    sa.Column('construction_year', sa.INTEGER(), nullable=True),
    sa.Column('energy_used_for_pumping_mwh', sa.FLOAT(), nullable=True),
    sa.Column('installation_year', sa.INTEGER(), nullable=True),
    sa.Column('net_generation_mwh', sa.FLOAT(), nullable=True),
    sa.Column('net_load_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_dams', sa.FLOAT(), nullable=True),
    sa.Column('opex_electric', sa.FLOAT(), nullable=True),
    sa.Column('opex_engineering', sa.FLOAT(), nullable=True),
    sa.Column('opex_generation_misc', sa.FLOAT(), nullable=True),
    sa.Column('opex_misc_plant', sa.FLOAT(), nullable=True),
    sa.Column('opex_operations', sa.FLOAT(), nullable=True),
    sa.Column('opex_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_plant', sa.FLOAT(), nullable=True),
    sa.Column('opex_production_before_pumping', sa.FLOAT(), nullable=True),
    sa.Column('opex_pumped_storage', sa.FLOAT(), nullable=True),
    sa.Column('opex_pumping', sa.FLOAT(), nullable=True),
    sa.Column('opex_rents', sa.FLOAT(), nullable=True),
    sa.Column('opex_structures', sa.FLOAT(), nullable=True),
    sa.Column('opex_total', sa.FLOAT(), nullable=True),
    sa.Column('opex_total_nonfuel', sa.FLOAT(), nullable=True),
    sa.Column('opex_water_for_power', sa.FLOAT(), nullable=True),
    sa.Column('peak_demand_mw', sa.FLOAT(), nullable=True),
    sa.Column('plant_capability_mw', sa.FLOAT(), nullable=True),
    sa.Column('plant_hours_connected_while_generating', sa.FLOAT(), nullable=True),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('project_num', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_denorm_plants_pumped_storage_ferc1_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name='fk_denorm_plants_pumped_storage_ferc1_utility_id_ferc1_core_pudl__assn_plants_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_plants_pumped_storage_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('record_id', name='pk_denorm_plants_pumped_storage_ferc1')
    )
    op.create_table('denorm_plants_all_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('plant_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('plant_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('asset_retirement_cost', sa.FLOAT(), nullable=True),
    sa.Column('avg_num_employees', sa.FLOAT(), nullable=True),
    sa.Column('capacity_factor', sa.FLOAT(), nullable=True),
    sa.Column('capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_addition', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_addition_rolling', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_kw', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_mw_rolling', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_mwh_rolling', sa.FLOAT(), nullable=True),
    sa.Column('capex_equipment', sa.FLOAT(), nullable=True),
    sa.Column('capex_land', sa.FLOAT(), nullable=True),
    sa.Column('capex_per_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_structures', sa.FLOAT(), nullable=True),
    sa.Column('capex_total', sa.FLOAT(), nullable=True),
    sa.Column('capex_wo_retirement_total', sa.FLOAT(), nullable=True),
    sa.Column('construction_type', sa.VARCHAR(length=12), nullable=True),
    sa.Column('construction_year', sa.INTEGER(), nullable=True),
    sa.Column('installation_year', sa.INTEGER(), nullable=True),
    sa.Column('net_generation_mwh', sa.FLOAT(), nullable=True),
    sa.Column('not_water_limited_capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('opex_allowances', sa.FLOAT(), nullable=True),
    sa.Column('opex_boiler', sa.FLOAT(), nullable=True),
    sa.Column('opex_coolants', sa.FLOAT(), nullable=True),
    sa.Column('opex_electric', sa.FLOAT(), nullable=True),
    sa.Column('opex_engineering', sa.FLOAT(), nullable=True),
    sa.Column('opex_fuel', sa.FLOAT(), nullable=True),
    sa.Column('fuel_cost_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_misc_power', sa.FLOAT(), nullable=True),
    sa.Column('opex_misc_steam', sa.FLOAT(), nullable=True),
    sa.Column('opex_nonfuel_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_operations', sa.FLOAT(), nullable=True),
    sa.Column('opex_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_plant', sa.FLOAT(), nullable=True),
    sa.Column('opex_production_total', sa.FLOAT(), nullable=True),
    sa.Column('opex_rents', sa.FLOAT(), nullable=True),
    sa.Column('opex_steam', sa.FLOAT(), nullable=True),
    sa.Column('opex_steam_other', sa.FLOAT(), nullable=True),
    sa.Column('opex_structures', sa.FLOAT(), nullable=True),
    sa.Column('opex_total_nonfuel', sa.FLOAT(), nullable=True),
    sa.Column('opex_transfer', sa.FLOAT(), nullable=True),
    sa.Column('peak_demand_mw', sa.FLOAT(), nullable=True),
    sa.Column('plant_capability_mw', sa.FLOAT(), nullable=True),
    sa.Column('plant_hours_connected_while_generating', sa.FLOAT(), nullable=True),
    sa.Column('plant_type', sa.TEXT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=False),
    sa.Column('water_limited_capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('fuel_cost_per_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('fuel_type', sa.TEXT(), nullable=True),
    sa.Column('license_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('opex_maintenance', sa.FLOAT(), nullable=True),
    sa.Column('opex_total', sa.FLOAT(), nullable=True),
    sa.Column('capex_facilities', sa.FLOAT(), nullable=True),
    sa.Column('capex_roads', sa.FLOAT(), nullable=True),
    sa.Column('net_capacity_adverse_conditions_mw', sa.FLOAT(), nullable=True),
    sa.Column('net_capacity_favorable_conditions_mw', sa.FLOAT(), nullable=True),
    sa.Column('opex_dams', sa.FLOAT(), nullable=True),
    sa.Column('opex_generation_misc', sa.FLOAT(), nullable=True),
    sa.Column('opex_hydraulic', sa.FLOAT(), nullable=True),
    sa.Column('opex_misc_plant', sa.FLOAT(), nullable=True),
    sa.Column('opex_water_for_power', sa.FLOAT(), nullable=True),
    sa.Column('ferc_license_id', sa.TEXT(), nullable=True),
    sa.Column('capex_equipment_electric', sa.FLOAT(), nullable=True),
    sa.Column('capex_equipment_misc', sa.FLOAT(), nullable=True),
    sa.Column('capex_wheels_turbines_generators', sa.FLOAT(), nullable=True),
    sa.Column('energy_used_for_pumping_mwh', sa.FLOAT(), nullable=True),
    sa.Column('net_load_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_production_before_pumping', sa.FLOAT(), nullable=True),
    sa.Column('opex_pumped_storage', sa.FLOAT(), nullable=True),
    sa.Column('opex_pumping', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_denorm_plants_all_ferc1_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name='fk_denorm_plants_all_ferc1_utility_id_ferc1_core_pudl__assn_plants_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_plants_all_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('record_id', name='pk_denorm_plants_all_ferc1')
    )
    op.create_table('denorm_purchased_power_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('seller_name', sa.TEXT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('billing_demand_mw', sa.FLOAT(), nullable=True),
    sa.Column('coincident_peak_demand_mw', sa.FLOAT(), nullable=True),
    sa.Column('delivered_mwh', sa.FLOAT(), nullable=True),
    sa.Column('demand_charges', sa.FLOAT(), nullable=True),
    sa.Column('energy_charges', sa.FLOAT(), nullable=True),
    sa.Column('non_coincident_peak_demand_mw', sa.FLOAT(), nullable=True),
    sa.Column('other_charges', sa.FLOAT(), nullable=True),
    sa.Column('purchase_type_code', sa.TEXT(), nullable=True),
    sa.Column('purchased_mwh', sa.FLOAT(), nullable=True),
    sa.Column('received_mwh', sa.FLOAT(), nullable=True),
    sa.Column('tariff', sa.TEXT(), nullable=True),
    sa.Column('total_settlement', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['purchase_type_code'], ['core_ferc1__codes_power_purchase_types.code'], name='fk_denorm_purchased_power_ferc1_purchase_type_code_core_ferc1__codes_power_purchase_types'),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_purchased_power_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_purchased_power_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl')
    )
    op.create_table('denorm_cash_flow_ferc1',
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('amount_type', sa.TEXT(), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=True),
    sa.Column('balance', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_cash_flow_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_cash_flow_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'amount_type', name='pk_denorm_cash_flow_ferc1')
    )
    op.create_table('denorm_electric_operating_expenses_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('dollar_value', sa.FLOAT(), nullable=True),
    sa.Column('expense_type', sa.TEXT(), nullable=False),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_electric_operating_expenses_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_electric_operating_expenses_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'expense_type', name='pk_denorm_electric_operating_expenses_ferc1')
    )
    op.create_table('denorm_plants_hydro_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('plant_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=False),
    sa.Column('asset_retirement_cost', sa.FLOAT(), nullable=True),
    sa.Column('avg_num_employees', sa.FLOAT(), nullable=True),
    sa.Column('capacity_factor', sa.FLOAT(), nullable=True),
    sa.Column('capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_equipment', sa.FLOAT(), nullable=True),
    sa.Column('capex_facilities', sa.FLOAT(), nullable=True),
    sa.Column('capex_land', sa.FLOAT(), nullable=True),
    sa.Column('capex_per_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_roads', sa.FLOAT(), nullable=True),
    sa.Column('capex_structures', sa.FLOAT(), nullable=True),
    sa.Column('capex_total', sa.FLOAT(), nullable=True),
    sa.Column('construction_type', sa.VARCHAR(length=12), nullable=True),
    sa.Column('construction_year', sa.INTEGER(), nullable=True),
    sa.Column('installation_year', sa.INTEGER(), nullable=True),
    sa.Column('net_capacity_adverse_conditions_mw', sa.FLOAT(), nullable=True),
    sa.Column('net_capacity_favorable_conditions_mw', sa.FLOAT(), nullable=True),
    sa.Column('net_generation_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_dams', sa.FLOAT(), nullable=True),
    sa.Column('opex_electric', sa.FLOAT(), nullable=True),
    sa.Column('opex_engineering', sa.FLOAT(), nullable=True),
    sa.Column('opex_generation_misc', sa.FLOAT(), nullable=True),
    sa.Column('opex_hydraulic', sa.FLOAT(), nullable=True),
    sa.Column('opex_misc_plant', sa.FLOAT(), nullable=True),
    sa.Column('opex_operations', sa.FLOAT(), nullable=True),
    sa.Column('opex_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_plant', sa.FLOAT(), nullable=True),
    sa.Column('opex_rents', sa.FLOAT(), nullable=True),
    sa.Column('opex_structures', sa.FLOAT(), nullable=True),
    sa.Column('opex_total', sa.FLOAT(), nullable=True),
    sa.Column('opex_total_nonfuel', sa.FLOAT(), nullable=True),
    sa.Column('opex_water_for_power', sa.FLOAT(), nullable=True),
    sa.Column('peak_demand_mw', sa.FLOAT(), nullable=True),
    sa.Column('plant_hours_connected_while_generating', sa.FLOAT(), nullable=True),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('plant_type', sa.TEXT(), nullable=True),
    sa.Column('project_num', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_denorm_plants_hydro_ferc1_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name='fk_denorm_plants_hydro_ferc1_utility_id_ferc1_core_pudl__assn_plants_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_plants_hydro_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('record_id', name='pk_denorm_plants_hydro_ferc1')
    )
    op.create_table('denorm_electricity_sales_by_rate_schedule_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('rate_schedule_type', sa.TEXT(), nullable=True),
    sa.Column('billing_status', sa.TEXT(), nullable=True),
    sa.Column('rate_schedule_description', sa.TEXT(), nullable=True),
    sa.Column('sales_mwh', sa.FLOAT(), nullable=True),
    sa.Column('dollar_value', sa.FLOAT(), nullable=True),
    sa.Column('avg_customers_per_month', sa.FLOAT(), nullable=True),
    sa.Column('kwh_per_customer', sa.FLOAT(), nullable=True),
    sa.Column('revenue_per_kwh', sa.FLOAT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_electricity_sales_by_rate_schedule_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_electricity_sales_by_rate_schedule_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl')
    )
    op.create_table('denorm_transmission_statistics_ferc1',
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('start_point', sa.TEXT(), nullable=True),
    sa.Column('end_point', sa.TEXT(), nullable=True),
    sa.Column('operating_voltage_kv', sa.FLOAT(), nullable=True),
    sa.Column('designed_voltage_kv', sa.FLOAT(), nullable=True),
    sa.Column('supporting_structure_type', sa.TEXT(), nullable=True),
    sa.Column('transmission_line_length_miles', sa.FLOAT(), nullable=True),
    sa.Column('transmission_line_and_structures_length_miles', sa.FLOAT(), nullable=True),
    sa.Column('num_transmission_circuits', sa.INTEGER(), nullable=True),
    sa.Column('conductor_size_and_material', sa.TEXT(), nullable=True),
    sa.Column('capex_land', sa.FLOAT(), nullable=True),
    sa.Column('capex_other', sa.FLOAT(), nullable=True),
    sa.Column('capex_total', sa.FLOAT(), nullable=True),
    sa.Column('opex_operations', sa.FLOAT(), nullable=True),
    sa.Column('opex_maintenance', sa.FLOAT(), nullable=True),
    sa.Column('opex_rents', sa.FLOAT(), nullable=True),
    sa.Column('opex_total', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_transmission_statistics_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_transmission_statistics_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl')
    )
    op.create_table('denorm_utility_plant_summary_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('utility_type', sa.TEXT(), nullable=False),
    sa.Column('utility_type_other', sa.TEXT(), nullable=True),
    sa.Column('utility_plant_asset_type', sa.TEXT(), nullable=False),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.Column('ending_balance', sa.FLOAT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_utility_plant_summary_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_utility_plant_summary_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'utility_type', 'utility_plant_asset_type', name='pk_denorm_utility_plant_summary_ferc1')
    )
    op.create_table('denorm_other_regulatory_liabilities_ferc1',
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('ending_balance', sa.FLOAT(), nullable=True),
    sa.Column('starting_balance', sa.FLOAT(), nullable=True),
    sa.Column('increase_in_other_regulatory_liabilities', sa.FLOAT(), nullable=True),
    sa.Column('account_detail', sa.TEXT(), nullable=True),
    sa.Column('decrease_in_other_regulatory_liabilities', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_other_regulatory_liabilities_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_other_regulatory_liabilities_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl')
    )
    op.create_table('denorm_income_statement_ferc1',
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('utility_type', sa.TEXT(), nullable=False),
    sa.Column('income_type', sa.TEXT(), nullable=False),
    sa.Column('dollar_value', sa.FLOAT(), nullable=True),
    sa.Column('balance', sa.TEXT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_income_statement_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_income_statement_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'utility_type', 'income_type', name='pk_denorm_income_statement_ferc1')
    )
    op.create_table('denorm_plants_steam_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('plant_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('plant_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('asset_retirement_cost', sa.FLOAT(), nullable=True),
    sa.Column('avg_num_employees', sa.FLOAT(), nullable=True),
    sa.Column('capacity_factor', sa.FLOAT(), nullable=True),
    sa.Column('capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_addition', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_addition_rolling', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_kw', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_mw_rolling', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('capex_annual_per_mwh_rolling', sa.FLOAT(), nullable=True),
    sa.Column('capex_equipment', sa.FLOAT(), nullable=True),
    sa.Column('capex_land', sa.FLOAT(), nullable=True),
    sa.Column('capex_per_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_structures', sa.FLOAT(), nullable=True),
    sa.Column('capex_total', sa.FLOAT(), nullable=True),
    sa.Column('capex_wo_retirement_total', sa.FLOAT(), nullable=True),
    sa.Column('construction_type', sa.VARCHAR(length=12), nullable=True),
    sa.Column('construction_year', sa.INTEGER(), nullable=True),
    sa.Column('installation_year', sa.INTEGER(), nullable=True),
    sa.Column('net_generation_mwh', sa.FLOAT(), nullable=True),
    sa.Column('not_water_limited_capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('opex_allowances', sa.FLOAT(), nullable=True),
    sa.Column('opex_boiler', sa.FLOAT(), nullable=True),
    sa.Column('opex_coolants', sa.FLOAT(), nullable=True),
    sa.Column('opex_electric', sa.FLOAT(), nullable=True),
    sa.Column('opex_engineering', sa.FLOAT(), nullable=True),
    sa.Column('opex_fuel', sa.FLOAT(), nullable=True),
    sa.Column('opex_fuel_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_misc_power', sa.FLOAT(), nullable=True),
    sa.Column('opex_misc_steam', sa.FLOAT(), nullable=True),
    sa.Column('opex_nonfuel_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_operations', sa.FLOAT(), nullable=True),
    sa.Column('opex_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_plants', sa.FLOAT(), nullable=True),
    sa.Column('opex_production_total', sa.FLOAT(), nullable=True),
    sa.Column('opex_rents', sa.FLOAT(), nullable=True),
    sa.Column('opex_steam', sa.FLOAT(), nullable=True),
    sa.Column('opex_steam_other', sa.FLOAT(), nullable=True),
    sa.Column('opex_structures', sa.FLOAT(), nullable=True),
    sa.Column('opex_total_nonfuel', sa.FLOAT(), nullable=True),
    sa.Column('opex_transfer', sa.FLOAT(), nullable=True),
    sa.Column('peak_demand_mw', sa.FLOAT(), nullable=True),
    sa.Column('plant_capability_mw', sa.FLOAT(), nullable=True),
    sa.Column('plant_hours_connected_while_generating', sa.FLOAT(), nullable=True),
    sa.Column('plant_type', sa.TEXT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=False),
    sa.Column('water_limited_capacity_mw', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_denorm_plants_steam_ferc1_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name='fk_denorm_plants_steam_ferc1_utility_id_ferc1_core_pudl__assn_plants_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_plants_steam_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('record_id', name='pk_denorm_plants_steam_ferc1')
    )
    op.create_table('denorm_plant_in_service_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=False),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=True),
    sa.Column('additions', sa.FLOAT(), nullable=True),
    sa.Column('adjustments', sa.FLOAT(), nullable=True),
    sa.Column('ending_balance', sa.FLOAT(), nullable=True),
    sa.Column('ferc_account', sa.TEXT(), nullable=True),
    sa.Column('ferc_account_label', sa.TEXT(), nullable=False),
    sa.Column('retirements', sa.FLOAT(), nullable=True),
    sa.Column('row_type_xbrl', sa.VARCHAR(length=16), nullable=True),
    sa.Column('starting_balance', sa.FLOAT(), nullable=True),
    sa.Column('transfers', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['utility_id_ferc1'], ['core_pudl__assn_utilities_ferc1.utility_id_ferc1'], name='fk_denorm_plant_in_service_ferc1_utility_id_ferc1_core_pudl__assn_utilities_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_plant_in_service_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('utility_id_ferc1', 'report_year', 'ferc_account_label', name='pk_denorm_plant_in_service_ferc1')
    )
    op.create_table('denorm_plants_small_ferc1',
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('utility_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('plant_name_ferc1', sa.TEXT(), nullable=True),
    sa.Column('record_id', sa.TEXT(), nullable=False),
    sa.Column('capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_per_mw', sa.FLOAT(), nullable=True),
    sa.Column('capex_total', sa.FLOAT(), nullable=True),
    sa.Column('construction_year', sa.INTEGER(), nullable=True),
    sa.Column('fuel_cost_per_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('fuel_type', sa.TEXT(), nullable=True),
    sa.Column('license_id_ferc1', sa.INTEGER(), nullable=True),
    sa.Column('net_generation_mwh', sa.FLOAT(), nullable=True),
    sa.Column('opex_fuel', sa.FLOAT(), nullable=True),
    sa.Column('opex_maintenance', sa.FLOAT(), nullable=True),
    sa.Column('opex_operations', sa.FLOAT(), nullable=True),
    sa.Column('opex_total', sa.FLOAT(), nullable=True),
    sa.Column('opex_total_nonfuel', sa.FLOAT(), nullable=True),
    sa.Column('peak_demand_mw', sa.FLOAT(), nullable=True),
    sa.Column('plant_type', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_denorm_plants_small_ferc1_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['utility_id_ferc1', 'plant_name_ferc1'], ['core_pudl__assn_plants_ferc1.utility_id_ferc1', 'core_pudl__assn_plants_ferc1.plant_name_ferc1'], name='fk_denorm_plants_small_ferc1_utility_id_ferc1_core_pudl__assn_plants_ferc1'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_denorm_plants_small_ferc1_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('record_id', name='pk_denorm_plants_small_ferc1')
    )
    op.drop_table('out_ferc1__yearly_fuel_by_plant')
    op.drop_table('out_ferc1__yearly_fuel')
    op.drop_table('out_ferc1__yearly_all_plants')
    op.drop_table('_out_ferc1__yearly_steam_plants')
    op.drop_table('_out_ferc1__yearly_small_plants')
    op.drop_table('_out_ferc1__yearly_pumped_storage_plants')
    op.drop_table('_out_ferc1__yearly_plants_utilities')
    op.drop_table('_out_ferc1__yearly_hydro_plants')
    op.drop_table('out_ferc1__yearly_utility_plant_summary')
    op.drop_table('out_ferc1__yearly_transmission_statistics')
    op.drop_table('out_ferc1__yearly_retained_earnings')
    op.drop_table('out_ferc1__yearly_purchased_power')
    op.drop_table('out_ferc1__yearly_plant_in_service')
    op.drop_table('out_ferc1__yearly_other_regulatory_liabilities')
    op.drop_table('out_ferc1__yearly_income_statement')
    op.drop_table('out_ferc1__yearly_electricity_sales_by_rate_schedule')
    op.drop_table('out_ferc1__yearly_electric_plant_depreciation_functional')
    op.drop_table('out_ferc1__yearly_electric_plant_depreciation_changes')
    op.drop_table('out_ferc1__yearly_electric_operating_revenues')
    op.drop_table('out_ferc1__yearly_electric_operating_expenses')
    op.drop_table('out_ferc1__yearly_electric_energy_sources')
    op.drop_table('out_ferc1__yearly_electric_energy_dispositions')
    op.drop_table('out_ferc1__yearly_depreciation_amortization_summary')
    op.drop_table('out_ferc1__yearly_cash_flow')
    op.drop_table('out_ferc1__yearly_balance_sheet_liabilities')
    op.drop_table('out_ferc1__yearly_balance_sheet_assets')
    # ### end Alembic commands ###
