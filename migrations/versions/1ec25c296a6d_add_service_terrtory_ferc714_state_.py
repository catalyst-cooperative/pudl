"""Add service terrtory, FERC714, state demand assets

Revision ID: 1ec25c296a6d
Revises: 88d9201ae4c4
Create Date: 2023-06-16 09:33:08.254754

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '1ec25c296a6d'
down_revision = 'e608f95a3b78'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compiled_geometry_balancing_authority_eia861',
    sa.Column('county_id_fips', sa.Text(), nullable=False, comment='County ID from the Federal Information Processing Standard Publication 6-4.'),
    sa.Column('county_name_census', sa.Text(), nullable=True, comment='County name as specified in Census DP1 Data.'),
    sa.Column('population', sa.Float(), nullable=True, comment='County population, sourced from Census DP1 data.'),
    sa.Column('area_km2', sa.Float(), nullable=True, comment='County area in km2.'),
    sa.Column('report_date', sa.Date(), nullable=False, comment='Date reported.'),
    sa.Column('balancing_authority_id_eia', sa.Integer(), nullable=False, comment='EIA balancing authority ID. This is often (but not always!) the same as the utility ID associated with the same legal entity.'),
    sa.Column('state', sa.Text(), nullable=True, comment='Two letter US state abbreviation.'),
    sa.Column('county', sa.Text(), nullable=False, comment='County name.'),
    sa.Column('state_id_fips', sa.Text(), nullable=True, comment='Two digit state FIPS code.'),
    sa.PrimaryKeyConstraint('balancing_authority_id_eia', 'report_date', 'county_id_fips', 'county')
    )
    op.create_table('compiled_geometry_utility_eia861',
    sa.Column('county_id_fips', sa.Text(), nullable=False, comment='County ID from the Federal Information Processing Standard Publication 6-4.'),
    sa.Column('county_name_census', sa.Text(), nullable=True, comment='County name as specified in Census DP1 Data.'),
    sa.Column('population', sa.Float(), nullable=True, comment='County population, sourced from Census DP1 data.'),
    sa.Column('area_km2', sa.Float(), nullable=True, comment='County area in km2.'),
    sa.Column('report_date', sa.Date(), nullable=False, comment='Date reported.'),
    sa.Column('utility_id_eia', sa.Integer(), nullable=False, comment='The EIA Utility Identification number.'),
    sa.Column('state', sa.Text(), nullable=True, comment='Two letter US state abbreviation.'),
    sa.Column('county', sa.Text(), nullable=True, comment='County name.'),
    sa.Column('state_id_fips', sa.Text(), nullable=True, comment='Two digit state FIPS code.'),
    sa.PrimaryKeyConstraint('utility_id_eia', 'report_date', 'county_id_fips')
    )
    op.create_table('predicted_state_hourly_demand',
    sa.Column('state_id_fips', sa.Text(), nullable=False, comment='Two digit state FIPS code.'),
    sa.Column('utc_datetime', sqlite.DATETIME(), nullable=False),
    sa.Column('demand_mwh', sa.Float(), nullable=True),
    sa.Column('scaled_demand_mwh', sa.Float(), nullable=True, comment='Estimated electricity demand scaled by the total sales within a state.'),
    sa.PrimaryKeyConstraint('state_id_fips', 'utc_datetime')
    )
    op.create_table('fipsified_respondents_ferc714',
    sa.Column('eia_code', sa.Integer(), nullable=True),
    sa.Column('respondent_type', sa.Enum('utility', 'balancing_authority'), nullable=True),
    sa.Column('respondent_id_ferc714', sa.Integer(), nullable=True),
    sa.Column('respondent_name_ferc714', sa.Text(), nullable=True),
    sa.Column('report_date', sa.Date(), nullable=True, comment='Date reported.'),
    sa.Column('balancing_authority_id_eia', sa.Integer(), nullable=True, comment='EIA balancing authority ID. This is often (but not always!) the same as the utility ID associated with the same legal entity.'),
    sa.Column('balancing_authority_code_eia', sa.Text(), nullable=True, comment='EIA short code identifying a balancing authority.'),
    sa.Column('balancing_authority_name_eia', sa.Text(), nullable=True, comment='Name of the balancing authority.'),
    sa.Column('utility_id_eia', sa.Integer(), nullable=True, comment='The EIA Utility Identification number.'),
    sa.Column('utility_name_eia', sa.Text(), nullable=True, comment='The name of the utility.'),
    sa.Column('state', sa.Text(), nullable=True, comment='Two letter US state abbreviation.'),
    sa.Column('county', sa.Text(), nullable=True, comment='County name.'),
    sa.Column('state_id_fips', sa.Text(), nullable=True, comment='Two digit state FIPS code.'),
    sa.Column('county_id_fips', sa.Text(), nullable=True, comment='County ID from the Federal Information Processing Standard Publication 6-4.'),
    sa.ForeignKeyConstraint(['respondent_id_ferc714'], ['respondent_id_ferc714.respondent_id_ferc714'], )
    )
    op.create_table('summarized_demand_ferc714',
    sa.Column('report_date', sa.Date(), nullable=False, comment='Date reported.'),
    sa.Column('respondent_id_ferc714', sa.Integer(), nullable=False),
    sa.Column('demand_annual_mwh', sa.Float(), nullable=True),
    sa.Column('population', sa.Float(), nullable=True, comment='County population, sourced from Census DP1 data.'),
    sa.Column('area_km2', sa.Float(), nullable=True, comment='County area in km2.'),
    sa.Column('population_density_km2', sa.Float(), nullable=True, comment='Average population per sq. km area of a service territory.'),
    sa.Column('demand_annual_per_capita_mwh', sa.Float(), nullable=True, comment='Per-capita annual demand, averaged using Census county-level population estimates.'),
    sa.Column('demand_density_mwh_km2', sa.Float(), nullable=True, comment='Annual demand per km2 of a given service territory.'),
    sa.Column('eia_code', sa.Integer(), nullable=True),
    sa.Column('respondent_type', sa.Enum('utility', 'balancing_authority'), nullable=True),
    sa.Column('respondent_name_ferc714', sa.Text(), nullable=True),
    sa.Column('balancing_authority_id_eia', sa.Integer(), nullable=True, comment='EIA balancing authority ID. This is often (but not always!) the same as the utility ID associated with the same legal entity.'),
    sa.Column('balancing_authority_code_eia', sa.Text(), nullable=True, comment='EIA short code identifying a balancing authority.'),
    sa.Column('balancing_authority_name_eia', sa.Text(), nullable=True, comment='Name of the balancing authority.'),
    sa.Column('utility_id_eia', sa.Integer(), nullable=True, comment='The EIA Utility Identification number.'),
    sa.Column('utility_name_eia', sa.Text(), nullable=True, comment='The name of the utility.'),
    sa.ForeignKeyConstraint(['respondent_id_ferc714'], ['respondent_id_ferc714.respondent_id_ferc714'], ),
    sa.PrimaryKeyConstraint('respondent_id_ferc714', 'report_date')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('summarized_demand_ferc714')
    op.drop_table('fipsified_respondents_ferc714')
    op.drop_table('predicted_state_hourly_demand')
    op.drop_table('compiled_geometry_utility_eia861')
    op.drop_table('compiled_geometry_balancing_authority_eia861')
    # ### end Alembic commands ###
