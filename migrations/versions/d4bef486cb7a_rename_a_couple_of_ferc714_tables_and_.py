"""Rename a couple of ferc714 tables and add out_eia__yearly_generators_by_ownership to database

Revision ID: d4bef486cb7a
Revises: 997d2c7bc7de
Create Date: 2024-01-24 10:51:57.643199

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = 'd4bef486cb7a'
down_revision = '997d2c7bc7de'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('out_ferc714__hourly_estimated_state_demand',
    sa.Column('state_id_fips', sa.Text(), nullable=False, comment='Two digit state FIPS code.'),
    sa.Column('utc_datetime', sqlite.DATETIME(), nullable=False),
    sa.Column('demand_mwh', sa.Float(), nullable=True),
    sa.Column('scaled_demand_mwh', sa.Float(), nullable=True, comment='Estimated electricity demand scaled by the total sales within a state.'),
    sa.PrimaryKeyConstraint('state_id_fips', 'utc_datetime', name=op.f('pk_out_ferc714__hourly_estimated_state_demand'))
    )
    op.create_table('core_ferc714__hourly_demand_by_planning_area',
    sa.Column('respondent_id_ferc714', sa.Integer(), nullable=False, comment='FERC Form 714 respondent ID. Note that this ID does not correspond to FERC respondent IDs from other forms.'),
    sa.Column('report_date', sa.Date(), nullable=False, comment='Date reported.'),
    sa.Column('utc_datetime', sqlite.DATETIME(), nullable=False),
    sa.Column('timezone', sa.Enum('America/New_York', 'America/Chicago', 'America/Denver', 'America/Los_Angeles', 'America/Anchorage', 'Pacific/Honolulu'), nullable=True, comment='IANA timezone name'),
    sa.Column('demand_mwh', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['respondent_id_ferc714'], ['core_ferc714__respondent_id.respondent_id_ferc714'], name=op.f('fk_core_ferc714__hourly_demand_by_planning_area_respondent_id_ferc714_core_ferc714__respondent_id')),
    sa.PrimaryKeyConstraint('respondent_id_ferc714', 'utc_datetime', name=op.f('pk_core_ferc714__hourly_demand_by_planning_area'))
    )
    op.drop_table('core_ferc714__hourly_demand_pa')
    op.drop_table('out_ferc714__hourly_predicted_state_demand')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('out_ferc714__hourly_predicted_state_demand',
    sa.Column('state_id_fips', sa.TEXT(), nullable=False),
    sa.Column('utc_datetime', sa.DATETIME(), nullable=False),
    sa.Column('demand_mwh', sa.FLOAT(), nullable=True),
    sa.Column('scaled_demand_mwh', sa.FLOAT(), nullable=True),
    sa.PrimaryKeyConstraint('state_id_fips', 'utc_datetime', name='pk_out_ferc714__hourly_predicted_state_demand')
    )
    op.create_table('core_ferc714__hourly_demand_pa',
    sa.Column('respondent_id_ferc714', sa.INTEGER(), nullable=False),
    sa.Column('report_date', sa.DATE(), nullable=False),
    sa.Column('utc_datetime', sa.DATETIME(), nullable=False),
    sa.Column('timezone', sa.VARCHAR(length=19), nullable=True),
    sa.Column('demand_mwh', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['respondent_id_ferc714'], ['core_ferc714__respondent_id.respondent_id_ferc714'], name='fk_core_ferc714__hourly_demand_pa_respondent_id_ferc714_core_ferc714__respondent_id'),
    sa.PrimaryKeyConstraint('respondent_id_ferc714', 'utc_datetime', name='pk_core_ferc714__hourly_demand_pa')
    )
    op.drop_table('core_ferc714__hourly_demand_by_planning_area')
    op.drop_table('out_ferc714__hourly_estimated_state_demand')
    # ### end Alembic commands ###
