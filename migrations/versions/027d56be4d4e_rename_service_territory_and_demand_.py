"""Rename service territory and demand tables

Revision ID: 027d56be4d4e
Revises: 79158fe4f428
Create Date: 2023-09-21 08:38:10.224197

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '027d56be4d4e'
down_revision = '79158fe4f428'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('out_eia861__compiled_geometry_balancing_authority',
    sa.Column('county_id_fips', sa.Text(), nullable=False, comment='County ID from the Federal Information Processing Standard Publication 6-4.'),
    sa.Column('county_name_census', sa.Text(), nullable=True, comment='County name as specified in Census DP1 Data.'),
    sa.Column('population', sa.Float(), nullable=True, comment='County population, sourced from Census DP1 data.'),
    sa.Column('area_km2', sa.Float(), nullable=True, comment='County area in km2.'),
    sa.Column('report_date', sa.Date(), nullable=False, comment='Date reported.'),
    sa.Column('balancing_authority_id_eia', sa.Integer(), nullable=False, comment='EIA balancing authority ID. This is often (but not always!) the same as the utility ID associated with the same legal entity.'),
    sa.Column('state', sa.Text(), nullable=True, comment='Two letter US state abbreviation.'),
    sa.Column('county', sa.Text(), nullable=False, comment='County name.'),
    sa.Column('state_id_fips', sa.Text(), nullable=True, comment='Two digit state FIPS code.'),
    sa.PrimaryKeyConstraint('balancing_authority_id_eia', 'report_date', 'county_id_fips', 'county', name=op.f('pk_out_eia861__compiled_geometry_balancing_authority'))
    )
    op.create_table('out_eia861__compiled_geometry_utility',
    sa.Column('county_id_fips', sa.Text(), nullable=False, comment='County ID from the Federal Information Processing Standard Publication 6-4.'),
    sa.Column('county_name_census', sa.Text(), nullable=True, comment='County name as specified in Census DP1 Data.'),
    sa.Column('population', sa.Float(), nullable=True, comment='County population, sourced from Census DP1 data.'),
    sa.Column('area_km2', sa.Float(), nullable=True, comment='County area in km2.'),
    sa.Column('report_date', sa.Date(), nullable=False, comment='Date reported.'),
    sa.Column('utility_id_eia', sa.Integer(), nullable=False, comment='The EIA Utility Identification number.'),
    sa.Column('state', sa.Text(), nullable=True, comment='Two letter US state abbreviation.'),
    sa.Column('county', sa.Text(), nullable=True, comment='County name.'),
    sa.Column('state_id_fips', sa.Text(), nullable=True, comment='Two digit state FIPS code.'),
    sa.PrimaryKeyConstraint('utility_id_eia', 'report_date', 'county_id_fips', name=op.f('pk_out_eia861__compiled_geometry_utility'))
    )
    op.create_table('out_ferc714__hourly_predicted_state_demand',
    sa.Column('state_id_fips', sa.Text(), nullable=False, comment='Two digit state FIPS code.'),
    sa.Column('utc_datetime', sqlite.DATETIME(), nullable=False),
    sa.Column('demand_mwh', sa.Float(), nullable=True),
    sa.Column('scaled_demand_mwh', sa.Float(), nullable=True, comment='Estimated electricity demand scaled by the total sales within a state.'),
    sa.PrimaryKeyConstraint('state_id_fips', 'utc_datetime', name=op.f('pk_out_ferc714__hourly_predicted_state_demand'))
    )
    op.drop_table('compiled_geometry_balancing_authority_eia861')
    op.drop_table('predicted_state_hourly_demand')
    op.drop_table('compiled_geometry_utility_eia861')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compiled_geometry_utility_eia861',
    sa.Column('county_id_fips', sa.TEXT(), nullable=False),
    sa.Column('county_name_census', sa.TEXT(), nullable=True),
    sa.Column('population', sa.FLOAT(), nullable=True),
    sa.Column('area_km2', sa.FLOAT(), nullable=True),
    sa.Column('report_date', sa.DATE(), nullable=False),
    sa.Column('utility_id_eia', sa.INTEGER(), nullable=False),
    sa.Column('state', sa.TEXT(), nullable=True),
    sa.Column('county', sa.TEXT(), nullable=True),
    sa.Column('state_id_fips', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('utility_id_eia', 'report_date', 'county_id_fips', name='pk_compiled_geometry_utility_eia861')
    )
    op.create_table('predicted_state_hourly_demand',
    sa.Column('state_id_fips', sa.TEXT(), nullable=False),
    sa.Column('utc_datetime', sa.DATETIME(), nullable=False),
    sa.Column('demand_mwh', sa.FLOAT(), nullable=True),
    sa.Column('scaled_demand_mwh', sa.FLOAT(), nullable=True),
    sa.PrimaryKeyConstraint('state_id_fips', 'utc_datetime', name='pk_predicted_state_hourly_demand')
    )
    op.create_table('compiled_geometry_balancing_authority_eia861',
    sa.Column('county_id_fips', sa.TEXT(), nullable=False),
    sa.Column('county_name_census', sa.TEXT(), nullable=True),
    sa.Column('population', sa.FLOAT(), nullable=True),
    sa.Column('area_km2', sa.FLOAT(), nullable=True),
    sa.Column('report_date', sa.DATE(), nullable=False),
    sa.Column('balancing_authority_id_eia', sa.INTEGER(), nullable=False),
    sa.Column('state', sa.TEXT(), nullable=True),
    sa.Column('county', sa.TEXT(), nullable=False),
    sa.Column('state_id_fips', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('balancing_authority_id_eia', 'report_date', 'county_id_fips', 'county', name='pk_compiled_geometry_balancing_authority_eia861')
    )
    op.drop_table('out_ferc714__hourly_predicted_state_demand')
    op.drop_table('out_eia861__compiled_geometry_utility')
    op.drop_table('out_eia861__compiled_geometry_balancing_authority')
    # ### end Alembic commands ###
