"""idk

Revision ID: 11a43f756905
Revises: 273a78878b74
Create Date: 2023-09-25 13:06:55.676082

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "11a43f756905"
down_revision = "273a78878b74"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "denorm_depreciation_amortization_summary_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(
            sa.Column(
                "utility_type",
                sa.Text(),
                nullable=True,
                comment="Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.",
            )
        )

    with op.batch_alter_table(
        "denorm_electric_operating_expenses_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(
            sa.Column(
                "utility_type",
                sa.Text(),
                nullable=True,
                comment="Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.",
            )
        )

    with op.batch_alter_table(
        "denorm_electric_operating_revenues_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(
            sa.Column(
                "utility_type",
                sa.Text(),
                nullable=True,
                comment="Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.",
            )
        )

    with op.batch_alter_table(
        "denorm_electric_plant_depreciation_functional_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(
            sa.Column(
                "depreciation_type",
                sa.Text(),
                nullable=True,
                comment="Type of depreciation provision within FERC Account 108, including cost ofremoval, depreciation expenses, salvage, cost of retired plant, etc.",
            )
        )
        batch_op.drop_column("ferc_account")

    with op.batch_alter_table("denorm_plant_in_service_ferc1", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "utility_type",
                sa.Text(),
                nullable=True,
                comment="Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.",
            )
        )

    with op.batch_alter_table("denorm_purchased_power_ferc1", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "purchased_storage_mwh",
                sa.Float(),
                nullable=True,
                comment="Number of megawatt hours purchased during the period for energy storage.",
            )
        )
        batch_op.add_column(
            sa.Column(
                "purchased_other_than_storage_mwh",
                sa.Float(),
                nullable=True,
                comment="Number of megawatt hours purchased during the period for other than energy storage.",
            )
        )

    with op.batch_alter_table(
        "depreciation_amortization_summary_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(
            sa.Column(
                "utility_type",
                sa.Text(),
                nullable=True,
                comment="Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.",
            )
        )
        batch_op.add_column(
            sa.Column(
                "row_type_xbrl",
                sa.Enum("calculated_value", "reported_value", "correction"),
                nullable=True,
                comment="Indicates whether the value reported in the row is calculated, or uniquely reported within the table.",
            )
        )

    with op.batch_alter_table(
        "electric_operating_expenses_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(
            sa.Column(
                "utility_type",
                sa.Text(),
                nullable=True,
                comment="Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.",
            )
        )

    with op.batch_alter_table(
        "electric_operating_revenues_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(
            sa.Column(
                "utility_type",
                sa.Text(),
                nullable=True,
                comment="Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.",
            )
        )

    with op.batch_alter_table(
        "electric_plant_depreciation_functional_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(
            sa.Column(
                "depreciation_type",
                sa.Text(),
                nullable=True,
                comment="Type of depreciation provision within FERC Account 108, including cost ofremoval, depreciation expenses, salvage, cost of retired plant, etc.",
            )
        )
        batch_op.drop_column("ferc_account")

    with op.batch_alter_table("plant_in_service_ferc1", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "utility_type",
                sa.Text(),
                nullable=True,
                comment="Listing of utility plant types. Examples include Electric Utility, Gas Utility, and Other Utility.",
            )
        )

    with op.batch_alter_table("purchased_power_ferc1", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "purchased_storage_mwh",
                sa.Float(),
                nullable=True,
                comment="Number of megawatt hours purchased during the period for energy storage.",
            )
        )
        batch_op.add_column(
            sa.Column(
                "purchased_other_than_storage_mwh",
                sa.Float(),
                nullable=True,
                comment="Number of megawatt hours purchased during the period for other than energy storage.",
            )
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("purchased_power_ferc1", schema=None) as batch_op:
        batch_op.drop_column("purchased_other_than_storage_mwh")
        batch_op.drop_column("purchased_storage_mwh")

    with op.batch_alter_table("plant_in_service_ferc1", schema=None) as batch_op:
        batch_op.drop_column("utility_type")

    with op.batch_alter_table(
        "electric_plant_depreciation_functional_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(sa.Column("ferc_account", sa.TEXT(), nullable=True))
        batch_op.drop_column("depreciation_type")

    with op.batch_alter_table(
        "electric_operating_revenues_ferc1", schema=None
    ) as batch_op:
        batch_op.drop_column("utility_type")

    with op.batch_alter_table(
        "electric_operating_expenses_ferc1", schema=None
    ) as batch_op:
        batch_op.drop_column("utility_type")

    with op.batch_alter_table(
        "depreciation_amortization_summary_ferc1", schema=None
    ) as batch_op:
        batch_op.drop_column("row_type_xbrl")
        batch_op.drop_column("utility_type")

    with op.batch_alter_table("denorm_purchased_power_ferc1", schema=None) as batch_op:
        batch_op.drop_column("purchased_other_than_storage_mwh")
        batch_op.drop_column("purchased_storage_mwh")

    with op.batch_alter_table("denorm_plant_in_service_ferc1", schema=None) as batch_op:
        batch_op.drop_column("utility_type")

    with op.batch_alter_table(
        "denorm_electric_plant_depreciation_functional_ferc1", schema=None
    ) as batch_op:
        batch_op.add_column(sa.Column("ferc_account", sa.TEXT(), nullable=True))
        batch_op.drop_column("depreciation_type")

    with op.batch_alter_table(
        "denorm_electric_operating_revenues_ferc1", schema=None
    ) as batch_op:
        batch_op.drop_column("utility_type")

    with op.batch_alter_table(
        "denorm_electric_operating_expenses_ferc1", schema=None
    ) as batch_op:
        batch_op.drop_column("utility_type")

    with op.batch_alter_table(
        "denorm_depreciation_amortization_summary_ferc1", schema=None
    ) as batch_op:
        batch_op.drop_column("utility_type")

    # ### end Alembic commands ###
