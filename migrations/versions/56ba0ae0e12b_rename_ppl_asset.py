"""Rename ppl asset

Revision ID: 56ba0ae0e12b
Revises: 2c1e76ddb4dc
Create Date: 2023-09-29 11:43:25.225220

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '56ba0ae0e12b'
down_revision = '2c1e76ddb4dc'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('out_eia__plant_parts',
    sa.Column('record_id_eia', sa.Text(), nullable=False, comment='Identifier for EIA plant parts analysis records.'),
    sa.Column('plant_id_eia', sa.Integer(), nullable=True, comment='The unique six-digit facility identification number, also called an ORISPL, assigned by the Energy Information Administration.'),
    sa.Column('report_date', sa.Date(), nullable=True, comment='Date reported.'),
    sa.Column('plant_part', sa.Enum('plant_ferc_acct', 'plant_gen', 'plant_match_ferc1', 'plant_prime_mover', 'plant_technology', 'plant', 'plant_unit', 'plant_prime_fuel', 'plant_operating_year'), nullable=True, comment='The part of the plant a record corresponds to.'),
    sa.Column('generator_id', sa.Text(), nullable=True, comment='Generator ID is usually numeric, but sometimes includes letters. Make sure you treat it as a string!'),
    sa.Column('unit_id_pudl', sa.Integer(), nullable=True, comment='Dynamically assigned PUDL unit id. WARNING: This ID is not guaranteed to be static long term as the input data and algorithm may evolve over time.'),
    sa.Column('prime_mover_code', sa.Text(), nullable=True, comment='Code for the type of prime mover (e.g. CT, CG)'),
    sa.Column('energy_source_code_1', sa.Text(), nullable=True, comment='The code representing the most predominant type of energy that fuels the generator.'),
    sa.Column('technology_description', sa.Text(), nullable=True, comment='High level description of the technology used by the generator to produce electricity.'),
    sa.Column('ferc_acct_name', sa.Enum('Hydraulic', 'Nuclear', 'Steam', 'Other'), nullable=True, comment='Name of FERC account, derived from technology description and prime mover code.'),
    sa.Column('utility_id_eia', sa.Integer(), nullable=True, comment='The EIA Utility Identification number.'),
    sa.Column('true_gran', sa.Boolean(), nullable=True, comment='Indicates whether a plant part list record is associated with the highest priority plant part for all identical records.'),
    sa.Column('appro_part_label', sa.Enum('plant_ferc_acct', 'plant_gen', 'plant_match_ferc1', 'plant_prime_mover', 'plant_technology', 'plant', 'plant_unit', 'plant_prime_fuel', 'plant_operating_year'), nullable=True, comment='Plant part of the associated true granularity record.'),
    sa.Column('appro_record_id_eia', sa.Text(), nullable=True, comment='EIA record ID of the associated true granularity record.'),
    sa.Column('ferc1_generator_agg_id', sa.Integer(), nullable=True, comment='ID dynamically assigned by PUDL to EIA records with multiple matches to a single FERC ID in the FERC-EIA manual matching process.'),
    sa.Column('capacity_eoy_mw', sa.Float(), nullable=True, comment='Total end of year installed (nameplate) capacity for a plant part, in megawatts.'),
    sa.Column('capacity_factor', sa.Float(), nullable=True, comment='Fraction of potential generation that was actually reported for a plant part.'),
    sa.Column('capacity_mw', sa.Float(), nullable=True, comment='Total installed (nameplate) capacity, in megawatts.'),
    sa.Column('construction_year', sa.Integer(), nullable=True, comment="Year the plant's oldest still operational unit was built."),
    sa.Column('fraction_owned', sa.Float(), nullable=True, comment='Proportion of generator ownership attributable to this utility.'),
    sa.Column('fuel_cost_per_mmbtu', sa.Float(), nullable=True, comment='Average fuel cost per mmBTU of heat content in nominal USD.'),
    sa.Column('fuel_cost_per_mwh', sa.Float(), nullable=True, comment='Derived from MCOE, a unit level value. Average fuel cost per MWh of heat content in nominal USD.'),
    sa.Column('fuel_type_code_pudl', sa.Enum('coal', 'gas', 'hydro', 'nuclear', 'oil', 'other', 'solar', 'waste', 'wind'), nullable=True, comment='Simplified fuel type code used in PUDL'),
    sa.Column('generator_retirement_date', sa.Date(), nullable=True, comment='Date of the scheduled or effected retirement of the generator.'),
    sa.Column('heat_rate_mmbtu_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'),
    sa.Column('installation_year', sa.Integer(), nullable=True, comment="Year the plant's most recently built unit was installed."),
    sa.Column('net_generation_mwh', sa.Float(), nullable=True, comment='Net electricity generation for the specified period in megawatt-hours (MWh).'),
    sa.Column('generator_operating_year', sa.Integer(), nullable=True, comment='Year a generator went into service.'),
    sa.Column('operational_status', sa.Text(), nullable=True, comment='The operating status of the asset. For generators this is based on which tab the generator was listed in in EIA 860.'),
    sa.Column('operational_status_pudl', sa.Enum('operating', 'retired', 'proposed'), nullable=True, comment='The operating status of the asset using PUDL categories.'),
    sa.Column('ownership_record_type', sa.Enum('owned', 'total'), nullable=True, comment='Whether each generator record is for one owner or represents a total of all ownerships.'),
    sa.Column('ownership_dupe', sa.Boolean(), nullable=True, comment='Whether a plant part record has a duplicate record with different ownership status.'),
    sa.Column('planned_generator_retirement_date', sa.Date(), nullable=True, comment='Planned effective date of the scheduled retirement of the generator.'),
    sa.Column('plant_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL plant ID. May not be constant over time.'),
    sa.Column('plant_name_eia', sa.Text(), nullable=True, comment='Plant name.'),
    sa.Column('plant_name_ppe', sa.Text(), nullable=True, comment='Derived plant name that includes EIA plant name and other strings associated with ID and PK columns of the plant part.'),
    sa.Column('plant_part_id_eia', sa.Text(), nullable=True, comment='Contains EIA plant ID, plant part, ownership, and EIA utility id'),
    sa.Column('record_count', sa.Integer(), nullable=True, comment='Number of distinct generator IDs that partcipated in the aggregation for a plant part list record.'),
    sa.Column('total_fuel_cost', sa.Float(), nullable=True, comment='Total annual reported fuel costs for the plant part. Includes costs from all fuels.'),
    sa.Column('total_mmbtu', sa.Float(), nullable=True, comment='Total annual heat content of fuel consumed by a plant part record in the plant parts list.'),
    sa.Column('utility_id_pudl', sa.Integer(), nullable=True, comment='A manually assigned PUDL utility ID. May not be stable over time.'),
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('plant_id_report_year', sa.Text(), nullable=True, comment='PUDL plant ID and report year of the record.'),
    sa.ForeignKeyConstraint(['energy_source_code_1'], ['core_eia__codes_energy_sources.code'], name=op.f('fk_out_eia__plant_parts_energy_source_code_1_core_eia__codes_energy_sources')),
    sa.ForeignKeyConstraint(['plant_id_eia', 'generator_id', 'report_date'], ['core_eia860__scd_generators.plant_id_eia', 'core_eia860__scd_generators.generator_id', 'core_eia860__scd_generators.report_date'], name=op.f('fk_out_eia__plant_parts_plant_id_eia_core_eia860__scd_generators')),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name=op.f('fk_out_eia__plant_parts_plant_id_pudl_core_pudl__entity_plants_pudl')),
    sa.ForeignKeyConstraint(['prime_mover_code'], ['core_eia__codes_prime_movers.code'], name=op.f('fk_out_eia__plant_parts_prime_mover_code_core_eia__codes_prime_movers')),
    sa.ForeignKeyConstraint(['utility_id_eia', 'report_date'], ['core_eia860__scd_utilities.utility_id_eia', 'core_eia860__scd_utilities.report_date'], name=op.f('fk_out_eia__plant_parts_utility_id_eia_core_eia860__scd_utilities')),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name=op.f('fk_out_eia__plant_parts_utility_id_pudl_core_pudl__entity_utilities_pudl')),
    sa.PrimaryKeyConstraint('record_id_eia', name=op.f('pk_out_eia__plant_parts'))
    )
    op.drop_table('plant_parts_eia')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plant_parts_eia',
    sa.Column('record_id_eia', sa.TEXT(), nullable=False),
    sa.Column('plant_id_eia', sa.INTEGER(), nullable=True),
    sa.Column('report_date', sa.DATE(), nullable=True),
    sa.Column('plant_part', sa.VARCHAR(length=20), nullable=True),
    sa.Column('generator_id', sa.TEXT(), nullable=True),
    sa.Column('unit_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('prime_mover_code', sa.TEXT(), nullable=True),
    sa.Column('energy_source_code_1', sa.VARCHAR(length=3), nullable=True),
    sa.Column('technology_description', sa.VARCHAR(length=43), nullable=True),
    sa.Column('ferc_acct_name', sa.VARCHAR(length=9), nullable=True),
    sa.Column('utility_id_eia', sa.INTEGER(), nullable=True),
    sa.Column('true_gran', sa.BOOLEAN(), nullable=True),
    sa.Column('appro_part_label', sa.VARCHAR(length=20), nullable=True),
    sa.Column('appro_record_id_eia', sa.TEXT(), nullable=True),
    sa.Column('ferc1_generator_agg_id', sa.INTEGER(), nullable=True),
    sa.Column('capacity_eoy_mw', sa.FLOAT(), nullable=True),
    sa.Column('capacity_factor', sa.FLOAT(), nullable=True),
    sa.Column('capacity_mw', sa.FLOAT(), nullable=True),
    sa.Column('construction_year', sa.INTEGER(), nullable=True),
    sa.Column('fraction_owned', sa.FLOAT(), nullable=True),
    sa.Column('fuel_cost_per_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('fuel_cost_per_mwh', sa.FLOAT(), nullable=True),
    sa.Column('fuel_type_code_pudl', sa.VARCHAR(length=7), nullable=True),
    sa.Column('generator_retirement_date', sa.DATE(), nullable=True),
    sa.Column('heat_rate_mmbtu_mwh', sa.FLOAT(), nullable=True),
    sa.Column('installation_year', sa.INTEGER(), nullable=True),
    sa.Column('net_generation_mwh', sa.FLOAT(), nullable=True),
    sa.Column('generator_operating_year', sa.INTEGER(), nullable=True),
    sa.Column('operational_status', sa.TEXT(), nullable=True),
    sa.Column('operational_status_pudl', sa.VARCHAR(length=9), nullable=True),
    sa.Column('ownership_record_type', sa.VARCHAR(length=5), nullable=True),
    sa.Column('ownership_dupe', sa.BOOLEAN(), nullable=True),
    sa.Column('planned_generator_retirement_date', sa.DATE(), nullable=True),
    sa.Column('plant_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('plant_name_eia', sa.TEXT(), nullable=True),
    sa.Column('plant_name_ppe', sa.TEXT(), nullable=True),
    sa.Column('plant_part_id_eia', sa.TEXT(), nullable=True),
    sa.Column('record_count', sa.INTEGER(), nullable=True),
    sa.Column('total_fuel_cost', sa.FLOAT(), nullable=True),
    sa.Column('total_mmbtu', sa.FLOAT(), nullable=True),
    sa.Column('utility_id_pudl', sa.INTEGER(), nullable=True),
    sa.Column('report_year', sa.INTEGER(), nullable=True),
    sa.Column('plant_id_report_year', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['energy_source_code_1'], ['core_eia__codes_energy_sources.code'], name='fk_plant_parts_eia_energy_source_code_1_core_eia__codes_energy_sources'),
    sa.ForeignKeyConstraint(['plant_id_eia', 'generator_id', 'report_date'], ['core_eia860__scd_generators.plant_id_eia', 'core_eia860__scd_generators.generator_id', 'core_eia860__scd_generators.report_date'], name='fk_plant_parts_eia_plant_id_eia_core_eia860__scd_generators'),
    sa.ForeignKeyConstraint(['plant_id_pudl'], ['core_pudl__entity_plants_pudl.plant_id_pudl'], name='fk_plant_parts_eia_plant_id_pudl_core_pudl__entity_plants_pudl'),
    sa.ForeignKeyConstraint(['prime_mover_code'], ['core_eia__codes_prime_movers.code'], name='fk_plant_parts_eia_prime_mover_code_core_eia__codes_prime_movers'),
    sa.ForeignKeyConstraint(['utility_id_eia', 'report_date'], ['core_eia860__scd_utilities.utility_id_eia', 'core_eia860__scd_utilities.report_date'], name='fk_plant_parts_eia_utility_id_eia_core_eia860__scd_utilities'),
    sa.ForeignKeyConstraint(['utility_id_pudl'], ['core_pudl__entity_utilities_pudl.utility_id_pudl'], name='fk_plant_parts_eia_utility_id_pudl_core_pudl__entity_utilities_pudl'),
    sa.PrimaryKeyConstraint('record_id_eia', name='pk_plant_parts_eia')
    )
    op.drop_table('out_eia__plant_parts')
    # ### end Alembic commands ###
