"""Rename heat rate column to follow column naming convention

Revision ID: 1e4356aa41cf
Revises: c415b55c4dcf
Create Date: 2023-10-04 20:00:29.217602

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '1e4356aa41cf'
down_revision = 'c415b55c4dcf'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('_out_eia__monthly_derived_generator_attributes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('_out_eia__monthly_fuel_cost_by_generator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('_out_eia__monthly_heat_rate_by_generator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('_out_eia__monthly_heat_rate_by_unit', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('_out_eia__yearly_derived_generator_attributes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('_out_eia__yearly_fuel_cost_by_generator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('_out_eia__yearly_heat_rate_by_generator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('_out_eia__yearly_heat_rate_by_unit', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('out_eia__monthly_generators', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('out_eia__plant_parts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('out_eia__yearly_generators', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    with op.batch_alter_table('out_eia__yearly_generators_by_ownership', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_heat_rate_mmbtu_per_mwh', sa.Float(), nullable=True, comment='Fuel content per unit of electricity generated. Coming from MCOE calculation.'))
        batch_op.drop_column('heat_rate_mmbtu_mwh_by_unit')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('out_eia__yearly_generators_by_ownership', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('out_eia__yearly_generators', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('out_eia__plant_parts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('out_eia__monthly_generators', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('_out_eia__yearly_heat_rate_by_unit', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('_out_eia__yearly_heat_rate_by_generator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('_out_eia__yearly_fuel_cost_by_generator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('_out_eia__yearly_derived_generator_attributes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('_out_eia__monthly_heat_rate_by_unit', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('_out_eia__monthly_heat_rate_by_generator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('_out_eia__monthly_fuel_cost_by_generator', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    with op.batch_alter_table('_out_eia__monthly_derived_generator_attributes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('heat_rate_mmbtu_mwh_by_unit', sa.FLOAT(), nullable=True))
        batch_op.drop_column('unit_heat_rate_mmbtu_per_mwh')

    # ### end Alembic commands ###
