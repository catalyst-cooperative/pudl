"""Write PHMSA operator table to DB

Revision ID: 1aa58750654a
Revises: 450d100cd30b
Create Date: 2025-01-07 14:03:28.581586

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1aa58750654a'
down_revision = '2be9c446753f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('core_phmsagas__yearly_distribution_operators',
    sa.Column('report_date', sa.Date(), nullable=True, comment='Date reported.'),
    sa.Column('report_number', sa.Integer(), nullable=False, comment='Report number.'),
    sa.Column('report_submission_type', sa.Text(), nullable=True, comment='Type of report submitted.'),
    sa.Column('report_year', sa.Integer(), nullable=True, comment='Four-digit year in which the data was reported.'),
    sa.Column('operator_id_phmsa', sa.Integer(), nullable=False, comment='PHMSA unique operator ID.'),
    sa.Column('operator_name_phmsa', sa.Text(), nullable=True, comment='PHMSA operator name.'),
    sa.Column('office_address_street', sa.Text(), nullable=True, comment="Street address of an operator's office."),
    sa.Column('office_address_city', sa.Text(), nullable=True, comment="City where an operator's office is located."),
    sa.Column('office_address_state', sa.Text(), nullable=True, comment="State where an operator's office is located."),
    sa.Column('office_address_zip', sa.Text(), nullable=True, comment="Zipcode where an operator's office is located."),
    sa.Column('office_address_county', sa.Text(), nullable=True, comment="County where an operator's office is located."),
    sa.Column('headquarters_address_street', sa.Text(), nullable=True, comment="Street address for an operator's headquarters."),
    sa.Column('headquarters_address_city', sa.Text(), nullable=True, comment="City where an operator's headquarters are located."),
    sa.Column('headquarters_address_state', sa.Text(), nullable=True, comment="State where an operator's headquarters are located."),
    sa.Column('headquarters_address_zip', sa.Text(), nullable=True, comment="Zipcode where an operator's headquarters are located."),
    sa.Column('headquarters_address_county', sa.Text(), nullable=True, comment="County where an operator's headquarters are located."),
    sa.Column('excavation_damage_excavation_practices', sa.Integer(), nullable=True, comment='Count of excavation practices resulting in excavation damage related to natural gas distribution.'),
    sa.Column('excavation_damage_locating_practices', sa.Integer(), nullable=True, comment='Count of locating practices resulting in excavation damage related to natural gas distribution.'),
    sa.Column('excavation_damage_one_call_notification', sa.Integer(), nullable=True, comment='Count of one-call notification practices resulting in excavation damage related to natural gas distribution.'),
    sa.Column('excavation_damage_other', sa.Integer(), nullable=True, comment='Count of other excavation practices resulting in excavation damage related to natural gas distribution.'),
    sa.Column('excavation_damage_total', sa.Integer(), nullable=True, comment='Count of reported instances excavation damage related to natural gas distribution.'),
    sa.Column('excavation_tickets', sa.Integer(), nullable=True, comment='Count of excavation tickets related to natural gas distribution.'),
    sa.Column('services_efv_in_system', sa.Integer(), nullable=True, comment='Estimated number of services with Excess Flow Valve in the system at end of reported year related to natural gas distribution.'),
    sa.Column('services_efv_installed', sa.Integer(), nullable=True, comment='Total number of services with Excess Flow Valve installed during reported year related to natural gas distribution.'),
    sa.Column('services_shutoff_valve_in_system', sa.Integer(), nullable=True, comment='Estimated number of services with manual service line shut-off valves installed in the system at end of report year related to natural gas distribution.'),
    sa.Column('services_shutoff_valve_installed', sa.Integer(), nullable=True, comment='Total number of manual service line shut-off valves installed during reported year related to natural gas distribution.'),
    sa.Column('federal_land_leaks_repaired_or_scheduled', sa.Float(), nullable=True, comment='Total number of leaks on federal land repaired or scheduled for repair.'),
    sa.Column('percent_unaccounted_for_gas', sa.Float(), nullable=True, comment='Unaccounted for gas as a percent of total consumption for the 12 months ending June 30 of the reporting year. Percentage is calculated as follows: Take the sum of: purchased gas + produced gas minus customer use + company use + appropriate adjustments. Then divide by the sum of customer use + company use + appropriate adjustments. Multiply the output by 100.'),
    sa.Column('additional_information', sa.Text(), nullable=True, comment='Field for any additional non-structured data supplied.'),
    sa.Column('preparer_email', sa.Text(), nullable=True, comment='Email address of representative who filed report.'),
    sa.Column('preparer_fax', sa.Text(), nullable=True, comment='Fax number of representative who filed report.'),
    sa.Column('preparer_name', sa.Text(), nullable=True, comment='Name of representative who filed report.'),
    sa.Column('preparer_phone', sa.Text(), nullable=True, comment='Phone number of representative who filed report.'),
    sa.Column('preparer_title', sa.Text(), nullable=True, comment='Title of representative who filed report.'),
    sa.PrimaryKeyConstraint('operator_id_phmsa', 'report_number', name=op.f('pk_core_phmsagas__yearly_distribution_operators'))
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('core_phmsagas__yearly_distribution_operators')
    # ### end Alembic commands ###
