{
    "link_type": "link_only",
    "unique_id_column_name": "record_id",
    "additional_columns_to_retain": [
        "plant_id_pudl",
        "utility_id_pudl",
        "report_year"
    ],
    "comparisons": [
        {
            "output_column_name": "plant_name",
            "comparison_levels": [
                {
                    "sql_condition": "\"plant_name_l\" IS NULL OR \"plant_name_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"plant_name_l\" = \"plant_name_r\"",
                    "label_for_charts": "Exact match plant_name",
                    "m_probability": 0.47072776280323453,
                    "u_probability": 0.00010273867183601652
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"plant_name_l\", \"plant_name_r\") >= 0.9",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.9",
                    "m_probability": 0.2584366576819407,
                    "u_probability": 0.00012734497587307773
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"plant_name_l\", \"plant_name_r\") >= 0.8",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.8",
                    "m_probability": 0.16916442048517522,
                    "u_probability": 0.0007771082553855945
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"plant_name_l\", \"plant_name_r\") >= 0.7",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.7",
                    "m_probability": 0.012398921832884097,
                    "u_probability": 0.003275775495611157
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.0892722371967655,
                    "u_probability": 0.9957170326012942
                }
            ],
            "comparison_description": "Exact match vs. Plant_Name within jaro_winkler thresholds 0.9, 0.8, 0.7 vs. anything else"
        },
        {
            "output_column_name": "utility_name",
            "comparison_levels": [
                {
                    "sql_condition": "\"utility_name_l\" IS NULL OR \"utility_name_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"utility_name_l\" = \"utility_name_r\"",
                    "label_for_charts": "Exact match utility_name",
                    "m_probability": 0.45831761599396453,
                    "u_probability": 0.0016604220091230254,
                    "tf_adjustment_column": "utility_name",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"utility_name_l\", \"utility_name_r\") >= 0.9",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.9",
                    "m_probability": 0.12347541808122721,
                    "u_probability": 0.0006172357505921373
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"utility_name_l\", \"utility_name_r\") >= 0.8",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.8",
                    "m_probability": 0.15679617754306552,
                    "u_probability": 0.005322384491049738
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"utility_name_l\", \"utility_name_r\") >= 0.7",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.7",
                    "m_probability": 0.031560417452533636,
                    "u_probability": 0.04985769286861348
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.2298503709292091,
                    "u_probability": 0.9425422648806216
                }
            ],
            "comparison_description": "Exact match vs. Utility_Name within jaro_winkler thresholds 0.9, 0.8, 0.7 vs. anything else"
        },
        {
            "output_column_name": "construction_year",
            "comparison_levels": [
                {
                    "sql_condition": "\"construction_year_l\" IS NULL OR \"construction_year_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"construction_year_l\" = \"construction_year_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.8492647058823529,
                    "u_probability": 0.009961670791661081
                },
                {
                    "sql_condition": "\n            abs(date_diff('year', \"construction_year_l\",\n              \"construction_year_r\")) <= 1\n        ",
                    "label_for_charts": "Within 1 year",
                    "m_probability": 0.036541889483065956,
                    "u_probability": 0.019713440942830954
                },
                {
                    "sql_condition": "\n            abs(date_diff('year', \"construction_year_l\",\n              \"construction_year_r\")) <= 2\n        ",
                    "label_for_charts": "Within 2 years",
                    "m_probability": 0.008912655971479501,
                    "u_probability": 0.018882992925934282
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.10528074866310161,
                    "u_probability": 0.9514418953395737
                }
            ],
            "comparison_description": "Exact match vs. Dates within the following thresholds Year(s): 1, Year(s): 2 vs. anything else"
        },
        {
            "output_column_name": "installation_year",
            "comparison_levels": [
                {
                    "sql_condition": "\"installation_year_l\" IS NULL OR \"installation_year_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"installation_year_l\" = \"installation_year_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.9139646040563235,
                    "u_probability": 0.012341976815131177
                },
                {
                    "sql_condition": "\n            abs(date_diff('year', \"installation_year_l\",\n              \"installation_year_r\")) <= 1\n        ",
                    "label_for_charts": "Within 1 year",
                    "m_probability": 0.03022865262885932,
                    "u_probability": 0.02433450274557657
                },
                {
                    "sql_condition": "\n            abs(date_diff('year', \"installation_year_l\",\n              \"installation_year_r\")) <= 2\n        ",
                    "label_for_charts": "Within 2 years",
                    "m_probability": 0.006846660638160445,
                    "u_probability": 0.02279301403294692
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.04896008267665676,
                    "u_probability": 0.9405305064063453
                }
            ],
            "comparison_description": "Exact match vs. Dates within the following thresholds Year(s): 1, Year(s): 2 vs. anything else"
        },
        {
            "output_column_name": "capacity_mw",
            "comparison_levels": [
                {
                    "sql_condition": "\"capacity_mw_l\" IS NULL OR \"capacity_mw_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "(abs(\"capacity_mw_l\" - \"capacity_mw_r\")/\n            (case\n                when \"capacity_mw_r\" > \"capacity_mw_l\"\n                then \"capacity_mw_r\"\n                else \"capacity_mw_l\"\n            end))\n            < 0.0001",
                    "label_for_charts": "< 0.01% diff",
                    "m_probability": 0.43493261455525606,
                    "u_probability": 0.002502799306774421
                },
                {
                    "sql_condition": "(abs(\"capacity_mw_l\" - \"capacity_mw_r\")/\n            (case\n                when \"capacity_mw_r\" > \"capacity_mw_l\"\n                then \"capacity_mw_r\"\n                else \"capacity_mw_l\"\n            end))\n            < 0.05",
                    "label_for_charts": "< 5.00% diff",
                    "m_probability": 0.36442048517520215,
                    "u_probability": 0.008564872281751757
                },
                {
                    "sql_condition": "(abs(\"capacity_mw_l\" - \"capacity_mw_r\")/\n            (case\n                when \"capacity_mw_r\" > \"capacity_mw_l\"\n                then \"capacity_mw_r\"\n                else \"capacity_mw_l\"\n            end))\n            < 0.1",
                    "label_for_charts": "< 10.00% diff",
                    "m_probability": 0.07256064690026955,
                    "u_probability": 0.01074541089324034
                },
                {
                    "sql_condition": "(abs(\"capacity_mw_l\" - \"capacity_mw_r\")/\n            (case\n                when \"capacity_mw_r\" > \"capacity_mw_l\"\n                then \"capacity_mw_r\"\n                else \"capacity_mw_l\"\n            end))\n            < 0.2",
                    "label_for_charts": "< 20.00% diff",
                    "m_probability": 0.06339622641509433,
                    "u_probability": 0.024946490515905233
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.0646900269541779,
                    "u_probability": 0.9532404270023282
                }
            ],
            "comparison_description": "0% different vs. 5% different vs. 10% different vs. 20% different vs. anything else"
        },
        {
            "output_column_name": "fuel_type_code_pudl",
            "comparison_levels": [
                {
                    "sql_condition": "\"fuel_type_code_pudl_l\" IS NULL OR \"fuel_type_code_pudl_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"fuel_type_code_pudl_l\" = \"fuel_type_code_pudl_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.8967546362339515,
                    "u_probability": 0.17881011375804304,
                    "tf_adjustment_column": "fuel_type_code_pudl",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.10324536376604851,
                    "u_probability": 0.821189886241957
                }
            ],
            "comparison_description": "Exact match vs. anything else"
        },
        {
            "output_column_name": "net_generation_mwh",
            "comparison_levels": [
                {
                    "sql_condition": "\"net_generation_mwh_l\" IS NULL OR \"net_generation_mwh_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "(abs(\"net_generation_mwh_l\" - \"net_generation_mwh_r\")/\n            (case\n                when \"net_generation_mwh_r\" > \"net_generation_mwh_l\"\n                then \"net_generation_mwh_r\"\n                else \"net_generation_mwh_l\"\n            end))\n            < 0.0001",
                    "label_for_charts": "< 0.01% diff",
                    "m_probability": 0.6119335003416079,
                    "u_probability": 0.0011655773390565484
                },
                {
                    "sql_condition": "(abs(\"net_generation_mwh_l\" - \"net_generation_mwh_r\")/\n            (case\n                when \"net_generation_mwh_r\" > \"net_generation_mwh_l\"\n                then \"net_generation_mwh_r\"\n                else \"net_generation_mwh_l\"\n            end))\n            < 0.01",
                    "label_for_charts": "< 1.00% diff",
                    "m_probability": 0.15702573445684354,
                    "u_probability": 0.0011978438810141745
                },
                {
                    "sql_condition": "(abs(\"net_generation_mwh_l\" - \"net_generation_mwh_r\")/\n            (case\n                when \"net_generation_mwh_r\" > \"net_generation_mwh_l\"\n                then \"net_generation_mwh_r\"\n                else \"net_generation_mwh_l\"\n            end))\n            < 0.1",
                    "label_for_charts": "< 10.00% diff",
                    "m_probability": 0.10521521293554999,
                    "u_probability": 0.01133187223108446
                },
                {
                    "sql_condition": "(abs(\"net_generation_mwh_l\" - \"net_generation_mwh_r\")/\n            (case\n                when \"net_generation_mwh_r\" > \"net_generation_mwh_l\"\n                then \"net_generation_mwh_r\"\n                else \"net_generation_mwh_l\"\n            end))\n            < 0.2",
                    "label_for_charts": "< 20.00% diff",
                    "m_probability": 0.02653154179002505,
                    "u_probability": 0.014060660549662601
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.09929401047597358,
                    "u_probability": 0.9722440459991822
                }
            ],
            "comparison_description": "0% different vs. 1% different vs. 10% different vs. 20% different vs. anything else"
        }
    ],
    "blocking_rules_to_generate_predictions": [
        {
            "blocking_rule": "l.report_year = r.report_year and jaro_winkler_similarity(l.plant_name, r.plant_name) >= .7",
            "sql_dialect": null
        },
        {
            "blocking_rule": "l.report_year = r.report_year and jaro_winkler_similarity(l.plant_name, r.plant_name) >= .5 and l.utility_name = r.utility_name",
            "sql_dialect": null
        },
        {
            "blocking_rule": "l.report_year = r.report_year and jaro_winkler_similarity(l.utility_name, r.utility_name) >= .7 and l.installation_year = r.installation_year",
            "sql_dialect": null
        },
        {
            "blocking_rule": "(l.\"report_year\" = r.\"report_year\") AND (l.\"fuel_type_code_pudl\" = r.\"fuel_type_code_pudl\") AND (l.\"capacity_mw\" = r.\"capacity_mw\")",
            "sql_dialect": "duckdb"
        },
        {
            "blocking_rule": "l.report_year = r.report_year and jaro_winkler_similarity(l.plant_name, r.plant_name) >= .5 and l.net_generation_mwh = r.net_generation_mwh",
            "sql_dialect": null
        },
        {
            "blocking_rule": "l.report_year = r.report_year and jaro_winkler_similarity(l.utility_name, r.utility_name) >= .7 and l.construction_year = r.construction_year",
            "sql_dialect": null
        },
        {
            "blocking_rule": "l.report_year = r.report_year and jaro_winkler_similarity(l.plant_name, r.plant_name) >= .5 and l.capacity_mw = r.capacity_mw",
            "sql_dialect": null
        }
    ],
    "retain_matching_columns": true,
    "retain_intermediate_calculation_columns": true,
    "probability_two_random_records_match": 1.1308839893968316e-06,
    "linker_uid": "kgwj1sgq",
    "sql_dialect": "duckdb"
}